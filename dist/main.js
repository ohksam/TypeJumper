/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/gameplay */ \"./src/scripts/gameplay.js\");\n// this is your entry file - this is what Webpack will read\n\n// import Player from \"./scripts/player\";\n// import Platform from \"./scripts/platform\";\n// import Word from \"./scripts/word\";\n// ^for testing purposes rn. get rid of those once you have things properly imported and set in Game/Gameplay\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1000; // optimize this for 13-inch macbook pro when the\n  canvas.height = 650; // time comes\n\n  const bgImage = new Image();\n  bgImage.src = '../assets/dogekek.jpg';\n  ctx.drawImage(bgImage, 0, 0);\n  const gameplay = new _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx).animate();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ1E7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFFBQVEsQ0FBQztFQUNoRCxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQztFQUVuQ0gsTUFBTSxDQUFDSSxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUU7RUFDdEJKLE1BQU0sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFFOztFQUV0QixNQUFNQyxPQUFPLEdBQUcsSUFBSUMsS0FBSyxDQUFDLENBQUM7RUFDM0JELE9BQU8sQ0FBQ0UsR0FBRyxHQUFHLHVCQUF1QjtFQUNyQ04sR0FBRyxDQUFDTyxTQUFTLENBQUNILE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBRTVCLE1BQU1JLFFBQVEsR0FBRyxJQUFJYix5REFBUSxDQUFDSyxHQUFHLENBQUMsQ0FBQ1MsT0FBTyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVHlwZXJKdW1wLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBpcyB5b3VyIGVudHJ5IGZpbGUgLSB0aGlzIGlzIHdoYXQgV2VicGFjayB3aWxsIHJlYWRcclxuXHJcbi8vIGltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vc2NyaXB0cy9wbGF5ZXJcIjtcclxuLy8gaW1wb3J0IFBsYXRmb3JtIGZyb20gXCIuL3NjcmlwdHMvcGxhdGZvcm1cIjtcclxuLy8gaW1wb3J0IFdvcmQgZnJvbSBcIi4vc2NyaXB0cy93b3JkXCI7XHJcbi8vIF5mb3IgdGVzdGluZyBwdXJwb3NlcyBybi4gZ2V0IHJpZCBvZiB0aG9zZSBvbmNlIHlvdSBoYXZlIHRoaW5ncyBwcm9wZXJseSBpbXBvcnRlZCBhbmQgc2V0IGluIEdhbWUvR2FtZXBsYXlcclxuXHJcbmltcG9ydCBHYW1lIGZyb20gXCIuL3NjcmlwdHMvZ2FtZVwiO1xyXG5pbXBvcnQgR2FtZXBsYXkgZnJvbSBcIi4vc2NyaXB0cy9nYW1lcGxheVwiO1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcclxuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxyXG5cclxuICAgIGNhbnZhcy53aWR0aCA9IDEwMDA7ICAvLyBvcHRpbWl6ZSB0aGlzIGZvciAxMy1pbmNoIG1hY2Jvb2sgcHJvIHdoZW4gdGhlXHJcbiAgICBjYW52YXMuaGVpZ2h0ID0gNjUwOyAgLy8gdGltZSBjb21lc1xyXG5cclxuICAgIGNvbnN0IGJnSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgIGJnSW1hZ2Uuc3JjID0gJy4uL2Fzc2V0cy9kb2dla2VrLmpwZyc7XHJcbiAgICBjdHguZHJhd0ltYWdlKGJnSW1hZ2UsIDAsIDApO1xyXG5cclxuICAgIGNvbnN0IGdhbWVwbGF5ID0gbmV3IEdhbWVwbGF5KGN0eCkuYW5pbWF0ZSgpO1xyXG59KVxyXG4iXSwibmFtZXMiOlsiR2FtZSIsIkdhbWVwbGF5IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJiZ0ltYWdlIiwiSW1hZ2UiLCJzcmMiLCJkcmF3SW1hZ2UiLCJnYW1lcGxheSIsImFuaW1hdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\n\n\n\n// after you chop off the first word element from your platforms array, .push that into a \"completedWords\" array so that you can keep track of how many words were typed (also this'll help you make sure that your code is working properly)\n// SRS for words that are not perfectly typed, send them back into your wordbank\n// or just make a counter instead of moving the whole word into your array of completedWords. just have completedWords = 0 then ++ when they finish a word.\n\nclass Game {\n  // static TEMPWORDBANK = ['welcome', 'to', 'typer', 'jump']; // this will eventually get replaced by real wordbank (lol)\n  // static START_PLATFORM = new Platform('start', {x: 150, y: 600})\n  // static NEW_POSITIONS = [{x: 150, y: 300}, {x: 600, y: 300}];\n\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.words = []; //this is probably unnecessary\n    // this.myQueue = [Game.START_PLATFORM];\n    this.index = 0;\n    this.platforms = this.currentLevelPlatforms();\n    this.player = new _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.currentPlatform = this.platforms[this.index];\n    this.counter = 0;\n    this.target = this.currentPlatform.word.string.length;\n  }\n  currentLevelPlatforms() {\n    //if (this.level === 1), obviously more dynamic later with i\n\n    // return this.level.allPlatforms // or something like that.\n\n    return [new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('welcome', {\n      x: 150,\n      y: 600\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('to', {\n      x: 600,\n      y: 350\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('type', {\n      x: 150,\n      y: 100\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('jumper', {\n      x: 600,\n      y: -150\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('here', {\n      x: 150,\n      y: -400\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('are', {\n      x: 600,\n      y: -650\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('some', {\n      x: 150,\n      y: -900\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('warmup', {\n      x: 600,\n      y: -1150\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('words', {\n      x: 150,\n      y: -1400\n    })];\n  }\n\n  // platformsQueue() {\n  //     // let myQueue = [Game.START_PLATFORM];\n  //     // debugger\n  //     this.myQueue.push(this.generateNewPlatform());\n  //     // console.log(myQueue)\n  //     return this.myQueue;\n  // }\n\n  // platformsOnScreen() {\n  //     let maxPlats = 2;\n  //     let screenPlats = []; //this is resetting to 0 words\n  //     while (screenPlats.length < maxPlats) {\n  //         screenPlats.push(this.platformsQueue().shift()) // might not work register on the other function though...\n  //     }\n  //     // console.log(screenPlats)\n  //     return screenPlats; \n  // }\n\n  // generateNewPlatform() {\n  //     let wordString = Game.TEMPWORDBANK.shift(); // this took wordbank word\n\n  //     // let wordObject = new Word(wordString, Game.NEW_POSITIONS[Math.floor(Math.random() * 2)]); // this took that string and made it a word object and gave it a random position\n\n  //     let nextPlatform = new Platform(wordString, Game.NEW_POSITIONS[Math.floor(Math.random() * 2)]);\n  //     return nextPlatform;\n  // }\n\n  allObjects() {\n    return this.platforms.concat(this.player);\n  }\n  draw(ctx) {\n    // debugger\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = \"#81D5FF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // debugger\n\n    this.allObjects().forEach(object => {\n      object.draw(ctx);\n    });\n    //draw functionality will not be taken care of by each individual class\n  }\n\n  update(ctx) {\n    //next snapshot\n    this.allObjects().forEach(object => {\n      object.update();\n    });\n    if (this.platforms[this.index].position.y >= 600) {\n      let dy = this.platforms[this.index].position.y - 600;\n      this.allObjects().forEach(object => {\n        object.falling = false;\n        object.position.y -= dy;\n      });\n    }\n    this.draw(ctx);\n  }\n  handleCorrectKey() {\n    this.counter += 1;\n    this.currentPlatform.handleCorrectKey();\n    if (this.counter === this.target) {\n      this.goNext();\n    }\n  }\n  handleBadKey() {\n    this.counter = 0;\n    this.currentPlatform.handleBadKey();\n  }\n  goNext() {\n    console.log('GO NEXT');\n    this.index += 1;\n    this.currentPlatform = this.platforms[this.index];\n    this.counter = 0;\n    this.allObjects().forEach(object => {\n      object.falling = true;\n    });\n    this.player.position = {\n      x: this.platforms[this.index].position.x + 100,\n      y: this.platforms[this.index].position.y - 50\n    };\n    // debugger\n\n    if (this.currentPlatform === undefined) {\n      console.log('you win!');\n    }\n    this.target = this.currentPlatform.word.string.length;\n  }\n\n  // not currently utilized\n  removeLowestPlatform() {\n    //this could be in Platform - and you \n    this.platforms.shift(); // and you just call it in game instead\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/gameplay.js":
/*!*********************************!*\
  !*** ./src/scripts/gameplay.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n// think of what we need to inherit here\n\n\n// THIS SHOULD JUST DETECT KEYBINDS AND START THE ANIMATION LOOP\n\nclass Gameplay {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n    this.currentWord = this.game.currentPlatform.word.string; // or this.game.platforms[0].word.string?\n    this.targetWord = this.currentWord;\n    this.bindKeyHandlers();\n  }\n\n  //hypothetically make a start() method which will call animate, bindKey, and wordChecker, which will keep checking currentWord's length and send in a new word/platform/etc once you've typed the word out.\n\n  animate() {\n    // \n    // this.drawBackground(ctx); // this should draw the canvas\n    // this.moveObjects();       // this should update all objects position by the scrollSpeed\n    // debugger\n\n    this.game.update(this.ctx); //this will call update in game which will then call draw for game\n\n    // ok. right now game.draw calls draw in all classes\n    // so what would game.update do? game update needs to change the position of all objects, but taht would be taken care of by their respective classes. \n    // so game.update should just call all objects to update\n    // each object's update can then call its own draw\n    // game.draw can just draw the canvas\n\n    // this.game.draw(this.ctx);    // and this should re-draw all objects after having been scrolled\n    // debugger\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  bindKeyHandlers() {\n    let rightChar = false;\n    document.addEventListener('keydown', e => {\n      const keyPressed = e.key;\n      // let currentWord = this.game.currentWord(); //THIS IS THE ISSUE RN\n      // let nextLetter = currentWord[0];\n\n      // console.log(e.key)\n      // console.log(this.currentWord)\n      // console.log(this.targetWord)\n\n      // just use an index reference here instead of mutating the string value in your words\n\n      //why save a separate variable and mutate it when you can just dive in and READ what's already there?\n      // - could save the currentWord to another var and slice that if you wish, but you could also do Game.currentPlatform.word.string[i] or something like\n      // let i = 0;\n      // could also say let currentWord = Game.Platform[0].word.string[i] (LMAO) then do this:\n      // if keyPressed = this.currentWord[i] {\n      // handleCorrectKeyPress()\n      // else \n      // handleBadKeyPress() and then rest i = 0\n      // }\n\n      // if good key press\n      //      Game.handleCorrectKeyPress\n      // else \n      //      Game.handleBadKeyPress\n\n      // let i = 0; // i is going to get reset after every key press so I can't save an i here..\n\n      // let currentWord = this.game.currentPlatform.word.string;\n      // let targetWord = currentWord;\n      if (keyPressed === this.targetWord[0]) {\n        // console.log('success'); // for testing\n        this.targetWord = this.targetWord.slice(1);\n        this.game.handleCorrectKey();\n        if (this.targetWord.length === 0) {\n          this.currentWord = this.game.currentPlatform.word.string;\n          this.targetWord = this.currentWord;\n        }\n      } else {\n        // console.log('miss'); //also for testing\n        this.targetWord = this.currentWord;\n        this.game.handleBadKey();\n      }\n\n      //we're refactoring this right now.\n      // if (keyPressed === this.currentWord[0]) {\n      //     console.log('success')\n      //     this.currentWord = this.currentWord.slice(1);\n      //     // nextLetter = currentWord[0];\n      //     //some logic to change the index value in your letter painting\n      //     // rightChar = true;\n      //     //THIS CODE NEEDS TO GO IN A DIFF FUNCTION, but for now...\n      //     if (this.currentWord.length === 0) {this.game.player.position = {x: 400, y: 400}} \n      //     // ^ that code isn't working. will i need to make a new Player instance when I want to teleport? we'll figure this out in a bit\n      //     } else {\n      //         console.log('miss')\n      // }\n    });\n  }\n\n  // if (currentWord.length === 0) {\n  //     player.position = {\n  //         x: (platforms[1].position.x + platform.width) / 2,\n  //         y: platforms[1].position.y + platform.height\n  //     } \n  //         // change this to make sure player is on top of, not inside, platform\n  //     currentWord = remainingWords.shift();\n  // }\n}\n\n// start() {\n//     this.\n// }\n\n//regarding scrolling... \n// if player.position.y <= 60% canvas height, give all objects extra velocity to scroll them down to ~20? we'll see.\n\n// none of this is needed atm because I'm just teleporting the character to the next plaform, for now\n\n// //\n// // ***REMEMBER THAT THIS IS ALL PLAGIARIZED AT THE MOMENT. MAKE IT YOUR OWN***\n// //\n// animate() { //the animation loop (also contains player movement)\n//     requestAnimationFrame(animate)\n//     ctx.clearRect(0, 0, canvas.width, canvas.height)\n//     player.update()\n//     platforms.forEach(platform => {\n//         platform.draw()\n//     })\n\n//     if (keys.right.pressed && player.position.x < 400) { // added <400 for screen bounds\n//         player.velocity.x = 5\n//     } else if (keys.left.pressed && player.position.x > 100) {\n//         player.velocity.x = -5 \n//     } else {\n//         player.velocity.x = 0\n\n//         if (keys.right.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x -= 5\n//             })\n//             // for your project, put in a background.forEach(river => { river.position.y -= 2}) or something like that for your parallax effect (might not be fully necessary though, tbh)\n//         } else if (keys.left.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x += 5\n//             })\n//         }\n//     }\n\n//     // PLATFORM COLLISION DETECTION\n//     platforms.forEach(platform => {\n//         if (player.position.y + player.height <= platform.position.y && player.position.y + player.height + player.velocity.y >= platform.position.y && player.position.x + player.width >= platform.position.x && player.position.x <= platform.position.x + platform.width) {\n//             player.velocity.y = 0\n//         }\n//     })\n// }\n\n// animate() //this is calling the loop ^\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gameplay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/gameplay.js\n");

/***/ }),

/***/ "./src/scripts/platform.js":
/*!*********************************!*\
  !*** ./src/scripts/platform.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\nclass Platform {\n  static START_X = 200;\n  static BASE_Y = 30;\n  static HEIGHT = 20;\n  static WIDTH = 250;\n  static COUNT = 3; //this should probably be in Game.\n  static GRAVITY = 5;\n  constructor(wordString, _ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.word = new _word__WEBPACK_IMPORTED_MODULE_0__[\"default\"](wordString, {\n      x,\n      y\n    });\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.falling = false;\n  }\n  draw(ctx) {\n    // do i want to pass platform.draw a position as parameter?\n    // debugger\n    ctx.fillStyle = \"#DEFF55\";\n    ctx.fillRect(this.position.x, this.position.y, Platform.WIDTH, Platform.HEIGHT);\n    // throw in word drawing logic here too\n    this.word.draw(ctx);\n  }\n  update() {\n    //next snapshot\n\n    if (this.falling) {\n      this.velocity.y += Platform.GRAVITY;\n    } else {\n      this.velocity.y = 0;\n    }\n\n    // this.draw()\n    this.position.y += this.velocity.y;\n    this.position.x += this.velocity.x;\n\n    // debugger\n    this.word.update(this.position);\n\n    // if (this.position.y + this.height + this.velocity.y >= 600) {\n    //     this.velocity.y = 0\n    // }\n  }\n\n  handleCorrectKey() {\n    this.word.handleCorrectKey();\n    // console.log(\"platform.Correct\")\n  }\n\n  handleBadKey() {\n    this.word.handleBadKey();\n    // console.log(\"platform.Bad\")\n  }\n}\n\n// at the very beginning, start with 2 hard-coded platforms in your platforms array, and then run the function addNewPlat() which is going to take the latest platform in your platforms array and then set a new x and y coordinate based off it's position. then it's going to make that new platform object and PUSH it into your platforms array as a queue.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Platform);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUF5QjtBQUV6QixNQUFNQyxRQUFRLENBQUM7RUFDWCxPQUFPQyxPQUFPLEdBQUcsR0FBRztFQUNwQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxLQUFLLEdBQUcsR0FBRztFQUNsQixPQUFPQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDbEIsT0FBT0MsT0FBTyxHQUFHLENBQUM7RUFFbEJDLFdBQVdBLENBQUNDLFVBQVUsRUFBQUMsSUFBQSxFQUFVO0lBQUEsSUFBUjtNQUFDQyxDQUFDO01BQUVDO0lBQUMsQ0FBQyxHQUFBRixJQUFBO0lBQzFCLElBQUksQ0FBQ0csSUFBSSxHQUFHLElBQUliLDZDQUFJLENBQUNTLFVBQVUsRUFBRTtNQUFDRSxDQUFDO01BQUVDO0lBQUMsQ0FBQyxDQUFDO0lBQ3hDLElBQUksQ0FBQ0UsUUFBUSxHQUFHO01BQ1pILENBQUMsRUFBRUEsQ0FBQztNQUNKQyxDQUFDLEVBQUVBO0lBQ1AsQ0FBQztJQUNELElBQUksQ0FBQ0csUUFBUSxHQUFHO01BQ1pKLENBQUMsRUFBRSxDQUFDO01BQ0pDLENBQUMsRUFBRTtJQUNQLENBQUM7SUFFRCxJQUFJLENBQUNJLE9BQU8sR0FBRyxLQUFLO0VBQ3hCO0VBRUFDLElBQUlBLENBQUNDLEdBQUcsRUFBRTtJQUFFO0lBQ1I7SUFDQUEsR0FBRyxDQUFDQyxTQUFTLEdBQUcsU0FBUztJQUN6QkQsR0FBRyxDQUFDRSxRQUFRLENBQUMsSUFBSSxDQUFDTixRQUFRLENBQUNILENBQUMsRUFBRSxJQUFJLENBQUNHLFFBQVEsQ0FBQ0YsQ0FBQyxFQUFFWCxRQUFRLENBQUNJLEtBQUssRUFBRUosUUFBUSxDQUFDRyxNQUFNLENBQUM7SUFDL0U7SUFDQSxJQUFJLENBQUNTLElBQUksQ0FBQ0ksSUFBSSxDQUFDQyxHQUFHLENBQUM7RUFDdkI7RUFFQUcsTUFBTUEsQ0FBQSxFQUFHO0lBQUk7O0lBRVQsSUFBSSxJQUFJLENBQUNMLE9BQU8sRUFBRTtNQUNkLElBQUksQ0FBQ0QsUUFBUSxDQUFDSCxDQUFDLElBQUlYLFFBQVEsQ0FBQ00sT0FBTztJQUN2QyxDQUFDLE1BQU07TUFDSCxJQUFJLENBQUNRLFFBQVEsQ0FBQ0gsQ0FBQyxHQUFHLENBQUM7SUFDdkI7O0lBRUE7SUFDQSxJQUFJLENBQUNFLFFBQVEsQ0FBQ0YsQ0FBQyxJQUFJLElBQUksQ0FBQ0csUUFBUSxDQUFDSCxDQUFDO0lBQ2xDLElBQUksQ0FBQ0UsUUFBUSxDQUFDSCxDQUFDLElBQUksSUFBSSxDQUFDSSxRQUFRLENBQUNKLENBQUM7O0lBRWxDO0lBQ0EsSUFBSSxDQUFDRSxJQUFJLENBQUNRLE1BQU0sQ0FBQyxJQUFJLENBQUNQLFFBQVEsQ0FBQzs7SUFFL0I7SUFDQTtJQUNBO0VBQ0o7O0VBRUFRLGdCQUFnQkEsQ0FBQSxFQUFHO0lBQ2YsSUFBSSxDQUFDVCxJQUFJLENBQUNTLGdCQUFnQixDQUFDLENBQUM7SUFDNUI7RUFDSjs7RUFFQUMsWUFBWUEsQ0FBQSxFQUFHO0lBQ1gsSUFBSSxDQUFDVixJQUFJLENBQUNVLFlBQVksQ0FBQyxDQUFDO0lBQ3hCO0VBQ0o7QUFFSjs7QUFHQTs7QUFJQSwrREFBZXRCLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcz84NmRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXb3JkIGZyb20gJy4vd29yZCdcclxuXHJcbmNsYXNzIFBsYXRmb3JtIHtcclxuICAgIHN0YXRpYyBTVEFSVF9YID0gMjAwO1xyXG4gICAgc3RhdGljIEJBU0VfWSA9IDMwO1xyXG4gICAgc3RhdGljIEhFSUdIVCA9IDIwO1xyXG4gICAgc3RhdGljIFdJRFRIID0gMjUwO1xyXG4gICAgc3RhdGljIENPVU5UID0gMzsgLy90aGlzIHNob3VsZCBwcm9iYWJseSBiZSBpbiBHYW1lLlxyXG4gICAgc3RhdGljIEdSQVZJVFkgPSA1O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHdvcmRTdHJpbmcsIHt4LCB5fSkge1xyXG4gICAgICAgIHRoaXMud29yZCA9IG5ldyBXb3JkKHdvcmRTdHJpbmcsIHt4LCB5fSk7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgeDogeCxcclxuICAgICAgICAgICAgeTogeVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnZlbG9jaXR5ID0ge1xyXG4gICAgICAgICAgICB4OiAwLFxyXG4gICAgICAgICAgICB5OiAwXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmZhbGxpbmcgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3KGN0eCkgeyAvLyBkbyBpIHdhbnQgdG8gcGFzcyBwbGF0Zm9ybS5kcmF3IGEgcG9zaXRpb24gYXMgcGFyYW1ldGVyP1xyXG4gICAgICAgIC8vIGRlYnVnZ2VyXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiI0RFRkY1NVwiXHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCBQbGF0Zm9ybS5XSURUSCwgUGxhdGZvcm0uSEVJR0hUKVxyXG4gICAgICAgIC8vIHRocm93IGluIHdvcmQgZHJhd2luZyBsb2dpYyBoZXJlIHRvb1xyXG4gICAgICAgIHRoaXMud29yZC5kcmF3KGN0eCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHVwZGF0ZSgpIHsgICAvL25leHQgc25hcHNob3RcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZmFsbGluZykge1xyXG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgKz0gUGxhdGZvcm0uR1JBVklUWTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gdGhpcy5kcmF3KClcclxuICAgICAgICB0aGlzLnBvc2l0aW9uLnkgKz0gdGhpcy52ZWxvY2l0eS55XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbi54ICs9IHRoaXMudmVsb2NpdHkueFxyXG5cclxuICAgICAgICAvLyBkZWJ1Z2dlclxyXG4gICAgICAgIHRoaXMud29yZC51cGRhdGUodGhpcy5wb3NpdGlvbik7XHJcblxyXG4gICAgICAgIC8vIGlmICh0aGlzLnBvc2l0aW9uLnkgKyB0aGlzLmhlaWdodCArIHRoaXMudmVsb2NpdHkueSA+PSA2MDApIHtcclxuICAgICAgICAvLyAgICAgdGhpcy52ZWxvY2l0eS55ID0gMFxyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVDb3JyZWN0S2V5KCkge1xyXG4gICAgICAgIHRoaXMud29yZC5oYW5kbGVDb3JyZWN0S2V5KCk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJwbGF0Zm9ybS5Db3JyZWN0XCIpXHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQmFkS2V5KCkge1xyXG4gICAgICAgIHRoaXMud29yZC5oYW5kbGVCYWRLZXkoKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcInBsYXRmb3JtLkJhZFwiKVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbi8vIGF0IHRoZSB2ZXJ5IGJlZ2lubmluZywgc3RhcnQgd2l0aCAyIGhhcmQtY29kZWQgcGxhdGZvcm1zIGluIHlvdXIgcGxhdGZvcm1zIGFycmF5LCBhbmQgdGhlbiBydW4gdGhlIGZ1bmN0aW9uIGFkZE5ld1BsYXQoKSB3aGljaCBpcyBnb2luZyB0byB0YWtlIHRoZSBsYXRlc3QgcGxhdGZvcm0gaW4geW91ciBwbGF0Zm9ybXMgYXJyYXkgYW5kIHRoZW4gc2V0IGEgbmV3IHggYW5kIHkgY29vcmRpbmF0ZSBiYXNlZCBvZmYgaXQncyBwb3NpdGlvbi4gdGhlbiBpdCdzIGdvaW5nIHRvIG1ha2UgdGhhdCBuZXcgcGxhdGZvcm0gb2JqZWN0IGFuZCBQVVNIIGl0IGludG8geW91ciBwbGF0Zm9ybXMgYXJyYXkgYXMgYSBxdWV1ZS5cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGxhdGZvcm07XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJXb3JkIiwiUGxhdGZvcm0iLCJTVEFSVF9YIiwiQkFTRV9ZIiwiSEVJR0hUIiwiV0lEVEgiLCJDT1VOVCIsIkdSQVZJVFkiLCJjb25zdHJ1Y3RvciIsIndvcmRTdHJpbmciLCJfcmVmIiwieCIsInkiLCJ3b3JkIiwicG9zaXRpb24iLCJ2ZWxvY2l0eSIsImZhbGxpbmciLCJkcmF3IiwiY3R4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJ1cGRhdGUiLCJoYW5kbGVDb3JyZWN0S2V5IiwiaGFuZGxlQmFkS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/platform.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n  static START_X = 260;\n  static START_Y = 500;\n  static GRAVITY = 5;\n  constructor() {\n    this.position = {\n      x: Player.START_X,\n      y: Player.START_Y\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.width = 50;\n    this.height = 50;\n  }\n  draw(ctx) {\n    ctx.fillStyle = \"#9AD914\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n  update() {\n    //CAUTION: this will not have ctx bound\n    // this.draw(ctx)\n    this.position.y += this.velocity.y;\n    this.position.x += this.velocity.x;\n    if (this.position.y + this.height + this.velocity.y <= 600) {\n      this.velocity.y += Player.GRAVITY;\n    } else {\n      this.position.y = 600 - this.height;\n      this.velocity.y = 0;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNULE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCLE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCLE9BQU9DLE9BQU8sR0FBRyxDQUFDO0VBQ2xCQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBRztNQUNaQyxDQUFDLEVBQUVOLE1BQU0sQ0FBQ0MsT0FBTztNQUNqQk0sQ0FBQyxFQUFFUCxNQUFNLENBQUNFO0lBQ2QsQ0FBQztJQUNELElBQUksQ0FBQ00sUUFBUSxHQUFHO01BQ1pGLENBQUMsRUFBRSxDQUFDO01BQ0pDLENBQUMsRUFBRTtJQUNQLENBQUM7SUFFRCxJQUFJLENBQUNFLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtFQUNwQjtFQUVBQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFDTkEsR0FBRyxDQUFDQyxTQUFTLEdBQUcsU0FBUztJQUN6QkQsR0FBRyxDQUFDRSxRQUFRLENBQUMsSUFBSSxDQUFDVCxRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxFQUFFLElBQUksQ0FBQ0UsS0FBSyxFQUFFLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0VBQzNFO0VBRUFLLE1BQU1BLENBQUEsRUFBRztJQUFJO0lBQ1Q7SUFDQSxJQUFJLENBQUNWLFFBQVEsQ0FBQ0UsQ0FBQyxJQUFJLElBQUksQ0FBQ0MsUUFBUSxDQUFDRCxDQUFDO0lBQ2xDLElBQUksQ0FBQ0YsUUFBUSxDQUFDQyxDQUFDLElBQUksSUFBSSxDQUFDRSxRQUFRLENBQUNGLENBQUM7SUFFbEMsSUFBSSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxHQUFHLElBQUksQ0FBQ0csTUFBTSxHQUFHLElBQUksQ0FBQ0YsUUFBUSxDQUFDRCxDQUFDLElBQUksR0FBRyxFQUFFO01BQ3hELElBQUksQ0FBQ0MsUUFBUSxDQUFDRCxDQUFDLElBQUlQLE1BQU0sQ0FBQ0csT0FBTztJQUNyQyxDQUFDLE1BQU07TUFDSCxJQUFJLENBQUNFLFFBQVEsQ0FBQ0UsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUNHLE1BQU07TUFDbkMsSUFBSSxDQUFDRixRQUFRLENBQUNELENBQUMsR0FBRyxDQUFDO0lBQ3ZCO0VBQ0o7QUFDSjtBQUlBLCtEQUFlUCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVHlwZXJKdW1wLy4vc3JjL3NjcmlwdHMvcGxheWVyLmpzPzY0NzEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUGxheWVyIHtcclxuICAgIHN0YXRpYyBTVEFSVF9YID0gMjYwO1xyXG4gICAgc3RhdGljIFNUQVJUX1kgPSA1MDA7XHJcbiAgICBzdGF0aWMgR1JBVklUWSA9IDU7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0ge1xyXG4gICAgICAgICAgICB4OiBQbGF5ZXIuU1RBUlRfWCxcclxuICAgICAgICAgICAgeTogUGxheWVyLlNUQVJUX1lcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IHtcclxuICAgICAgICAgICAgeDogMCxcclxuICAgICAgICAgICAgeTogMFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0aGlzLndpZHRoID0gNTBcclxuICAgICAgICB0aGlzLmhlaWdodCA9IDUwXHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjdHgpIHtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCIjOUFEOTE0XCJcclxuICAgICAgICBjdHguZmlsbFJlY3QodGhpcy5wb3NpdGlvbi54LCB0aGlzLnBvc2l0aW9uLnksIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KVxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpIHsgICAvL0NBVVRJT046IHRoaXMgd2lsbCBub3QgaGF2ZSBjdHggYm91bmRcclxuICAgICAgICAvLyB0aGlzLmRyYXcoY3R4KVxyXG4gICAgICAgIHRoaXMucG9zaXRpb24ueSArPSB0aGlzLnZlbG9jaXR5LnlcclxuICAgICAgICB0aGlzLnBvc2l0aW9uLnggKz0gdGhpcy52ZWxvY2l0eS54XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnBvc2l0aW9uLnkgKyB0aGlzLmhlaWdodCArIHRoaXMudmVsb2NpdHkueSA8PSA2MDApIHtcclxuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55ICs9IFBsYXllci5HUkFWSVRZXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbi55ID0gNjAwIC0gdGhpcy5oZWlnaHQ7XHJcbiAgICAgICAgICAgIHRoaXMudmVsb2NpdHkueSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYXllcjsiXSwibmFtZXMiOlsiUGxheWVyIiwiU1RBUlRfWCIsIlNUQVJUX1kiLCJHUkFWSVRZIiwiY29uc3RydWN0b3IiLCJwb3NpdGlvbiIsIngiLCJ5IiwidmVsb2NpdHkiLCJ3aWR0aCIsImhlaWdodCIsImRyYXciLCJjdHgiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInVwZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/word.js":
/*!*****************************!*\
  !*** ./src/scripts/word.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n\nclass Word {\n  constructor(string, _ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.string = string;\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.index = 0;\n    // this.letters = string.split('');\n  }\n\n  // wordBank = ['peck', 'push', 'coin', 'grim', 'soup', 'clap', 'nail', 'nuts', 'fine', 'walk', 'skelp', 'clock', 'sizes', 'elder', 'thief', 'thine', 'pious', 'dizzy', 'dazed', 'cloud', 'vital', 'these', 'excel', 'dodge', 'cease', 'being', 'pasty', 'abyss', 'hinder', 'alone', 'rewire', 'dragon', 'screwy', 'willed', 'basted', 'seeker', 'wagers', 'rabies', 'knight', 'larynx', 'winery', 'foiled', 'tartar', 'inmate', 'hornet', 'higher', 'deluge', 'zenith', 'hollow', 'mantis', 'tinted', 'infuse', 'planner', 'trussed', 'protium', 'pursuit', 'cogency', 'affable', 'thunder', 'clapped', 'subsale', 'cayenne', 'sifting', 'reorder', 'commend', 'minimum', 'bascule', 'inflict', 'overplan', 'function', 'fathered', 'flimflam', 'veracity', 'tutorial', 'frumpily', 'injuring', 'airliner', 'mistress', 'humoring', 'dressage', 'gemstone', 'gigaflop', 'scorning', 'rocklike', 'defender', 'vocalizes', 'whittling', 'nightmare', 'colosseum', 'confessed', 'debutante', 'insidious', 'micropore', 'omelettes', 'recumbent', 'moderates', 'weaponize', 'gyroscopic', 'dishearten', 'authorized', 'unfaithful', 'unbottling', 'crystalline']\n\n  // remainingWords = wordBank.sort(() => Math.random() - 0.5);\n\n  // currentWord = remainingWords.shift();\n\n  //\n  //on a bad key press, reset the index back to 0\n  //reset index is a WORD function, which has to get called by a \"handleBADkeypress\"\n  //\n\n  //instead of filling text with full string, draw each letter one at a time.\n  // for each letter's position, \n\n  //every word instance will start with this.index = 0\n  //give word class some type of function like \"handleCorrectKeyPress()\"\n  // - gonna take this.index ++\n\n  // THEN TELL PLATFORM IN ITS LOGIC TO ALSO handleCorrectKeyPress()\n  // - on a good key press, tell this.word.handleCorrectKeyPress()\n\n  // utilize a for (i)loop and do \n  // ctx.fillText (this.letters[i], this.position.x + \n  //*platform width/3 +)\n  // if i is less than this.index\n\n  paintLastGreen(ctx) {\n    // debugger\n    if (this.index < this.string.length - 1) {\n      ctx.font = '32px Cursive';\n      ctx.fillStyle = '#rgba(255, 255, 255, 0.5)'; // - this is red\n      ctx.fillText(this.string.slice(0, this.index), this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    } else if (this.index === this.string.length) {\n      ctx.font = '32.px Cursive';\n      ctx.fillStyle = '#00BD00';\n      ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    }\n  }\n  drawGreen(ctx) {\n    for (let i = 0; i < this.index; i++) {\n      ctx.font = '32px Cursive';\n      ctx.fillStyle = '#00BD00'; // - this is green\n      ctx.fillText(this.string.slice(0, this.index), this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    }\n  }\n  draw(ctx) {\n    // debugger\n    ctx.font = '32px Cursive';\n    ctx.fillStyle = '#BF0436';\n    // console.log(this.position)\n    ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    this.drawGreen(ctx);\n    this.paintLastGreen(ctx);\n\n    // this will be used when highlighting input\n    // ctx.fillStyle = 'blue'\n    // ctx.fillText(this.string.slice(0, 3), this.position.x, this.position.y, Platform.WIDTH)\n\n    // ctx.font = '32px Cursive';\n    // ctx.fillStyle = '#DC35F2';\n    // ctx.fillText('start', 600, 340)//this pos would be same as plat\n    // fillText(text, x, y, maxWidth)//this maxWidth would be platwidth\n  }\n\n  update(position) {\n    //next snapshot\n    this.position.x = position.x;\n    this.position.y = position.y;\n\n    //maybe something like this.drawRed() and this.drawGreen()?\n    //**remember this is the logic where kyle talked about using a constant that would increment by a couple pixels for each letter individually\n  }\n\n  handleCorrectKey() {\n    this.index += 1;\n    // if (this.index === this.string.length-1) {\n    //     this.paintLastGreen();\n    // }\n    // console.log(\"word.Correct\")\n  }\n\n  handleBadKey() {\n    this.resetIndex(); //or we could just put index = 0 here..\n    // console.log(\"word.Bad\")\n  }\n\n  resetIndex() {\n    this.index = 0;\n  }\n\n  // in the for loop that iterates over the words you want on the screen and draws them... if index === 0, send it do a different draw function(?) that'll highlight with red. other words that you don't want them to type will be written in green or something\n  // then when you're checking key inputs to see if the user has pressed the correct letters, add each letter to a lettersPressed array,\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Word);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;