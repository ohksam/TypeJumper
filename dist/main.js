/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/gameplay */ \"./src/scripts/gameplay.js\");\n// this is your entry file - this is what Webpack will read\n\n// import Player from \"./scripts/player\";\n// import Platform from \"./scripts/platform\";\n// import Word from \"./scripts/word\";\n// ^for testing purposes rn. get rid of those once you have things properly imported and set in Game/Gameplay\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1000; // optimize this for 13-inch macbook pro when the\n  canvas.height = 650; // time comes\n\n  const gameplay = new _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx).animate();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ1E7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFFBQVEsQ0FBQztFQUNoRCxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQztFQUVuQ0gsTUFBTSxDQUFDSSxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUU7RUFDdEJKLE1BQU0sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFFOztFQUV0QixNQUFNQyxRQUFRLEdBQUcsSUFBSVQseURBQVEsQ0FBQ0ssR0FBRyxDQUFDLENBQUNLLE9BQU8sQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1R5cGVySnVtcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaXMgaXMgeW91ciBlbnRyeSBmaWxlIC0gdGhpcyBpcyB3aGF0IFdlYnBhY2sgd2lsbCByZWFkXHJcblxyXG4vLyBpbXBvcnQgUGxheWVyIGZyb20gXCIuL3NjcmlwdHMvcGxheWVyXCI7XHJcbi8vIGltcG9ydCBQbGF0Zm9ybSBmcm9tIFwiLi9zY3JpcHRzL3BsYXRmb3JtXCI7XHJcbi8vIGltcG9ydCBXb3JkIGZyb20gXCIuL3NjcmlwdHMvd29yZFwiO1xyXG4vLyBeZm9yIHRlc3RpbmcgcHVycG9zZXMgcm4uIGdldCByaWQgb2YgdGhvc2Ugb25jZSB5b3UgaGF2ZSB0aGluZ3MgcHJvcGVybHkgaW1wb3J0ZWQgYW5kIHNldCBpbiBHYW1lL0dhbWVwbGF5XHJcblxyXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWVcIjtcclxuaW1wb3J0IEdhbWVwbGF5IGZyb20gXCIuL3NjcmlwdHMvZ2FtZXBsYXlcIjtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKVxyXG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJylcclxuXHJcbiAgICBjYW52YXMud2lkdGggPSAxMDAwOyAgLy8gb3B0aW1pemUgdGhpcyBmb3IgMTMtaW5jaCBtYWNib29rIHBybyB3aGVuIHRoZVxyXG4gICAgY2FudmFzLmhlaWdodCA9IDY1MDsgIC8vIHRpbWUgY29tZXNcclxuXHJcbiAgICBjb25zdCBnYW1lcGxheSA9IG5ldyBHYW1lcGxheShjdHgpLmFuaW1hdGUoKTtcclxufSlcclxuIl0sIm5hbWVzIjpbIkdhbWUiLCJHYW1lcGxheSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhcyIsImdldEVsZW1lbnRCeUlkIiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiaGVpZ2h0IiwiZ2FtZXBsYXkiLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\n\n\n\n//future idea\n// after you chop off the first word element from your platforms array, .push that into a \"completedWords\" array so that you can keep track of how many words were typed (also this'll help you make sure that your code is working properly)\n// SRS for words that are not perfectly typed, send them back into your wordbank\n// or just make a counter instead of moving the whole word into your array of completedWords. just have completedWords = 0 then ++ when they finish a word.\n\nclass Game {\n  // static TEMPWORDBANK = ['welcome', 'to', 'typer', 'jump']; // this will eventually get replaced by real wordbank (lol)\n  // static START_PLATFORM = new Platform('start', {x: 150, y: 600})\n  // static NEW_POSITIONS = [{x: 150, y: 300}, {x: 600, y: 300}];\n\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.words = []; //this is probably unnecessary\n    // this.myQueue = [Game.START_PLATFORM];\n    this.index = 0;\n    this.platforms = this.currentLevelPlatforms();\n    this.player = new _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.currentPlatform = this.platforms[this.index];\n    this.counter = 0;\n    this.target = this.currentPlatform.word.string.length;\n  }\n  currentLevelPlatforms() {\n    //if (this.level === 1), obviously more dynamic later with i\n    // return this.level.allPlatforms // or something like that.\n\n    return [new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('welcome', {\n      x: 150,\n      y: 600\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('to', {\n      x: 600,\n      y: 350\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('type', {\n      x: 150,\n      y: 100\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('jumper', {\n      x: 600,\n      y: -150\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('here', {\n      x: 150,\n      y: -400\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('are', {\n      x: 600,\n      y: -650\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('some', {\n      x: 150,\n      y: -900\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('warmup', {\n      x: 600,\n      y: -1150\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('words', {\n      x: 150,\n      y: -1400\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('array', {\n      x: 600,\n      y: -1900\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('recursion', {\n      x: 150,\n      y: -2150\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('iterate', {\n      x: 600,\n      y: -2400\n    }), new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('algorithm', {\n      x: 150,\n      y: -2650\n    })];\n  }\n  allObjects() {\n    return this.platforms.concat(this.player);\n  }\n\n  // this is to round out the canvas. we'll do this next time.\n  // draw(ctx) {\n  //     ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //     ctx.fillStyle = \"#65afd8\";\n  //     ctx.beginPath();\n  //     ctx.roundRect(0, 0, canvas.width, canvas.height, [150]);\n  //     ctx.fill();\n  //     ctx.closePath();\n\n  //     ctx.strokeStyle = \"green\";\n  //     ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  //     ctx.beginPath();\n  //     ctx.roundRect(0, 0, canvas.width, canvas.height, [150]);\n  //     ctx.closePath();\n\n  //     this.allObjects().forEach((object) => {\n  //         object.draw(ctx);\n  //     });\n  // }\n\n  // this is to add a gradient instead of a solid background. again, next time\n  // draw(ctx) {\n  //     ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  //     const gradient = ctx.createRadialGradient(110, 90, 30, 100, 100, 70);\n\n  //     gradient.addColorStop(0, \"#4CAF50\");\n  //     gradient.addColorStop(0.9, \"#F9A825\");\n  //     gradient.addColorStop(1, \"#65afd8\");\n\n  //     ctx.fillStyle = gradient;\n  //     ctx.fillRect(20, 20, 160, 160);\n\n  //     this.allObjects().forEach((object) => {\n  //         object.draw(ctx);\n  //     });\n  // }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = \"#65afd8\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = \"green\";\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n    this.allObjects().forEach(object => {\n      object.draw(ctx);\n    });\n  }\n  update(ctx) {\n    //next snapshot\n    this.allObjects().forEach(object => {\n      object.update();\n    });\n    if (this.platforms[this.index].position.y >= 600) {\n      let dy = this.platforms[this.index].position.y - 600;\n      this.allObjects().forEach(object => {\n        object.falling = false;\n        object.position.y -= dy;\n      });\n    }\n    this.draw(ctx);\n  }\n  handleCorrectKey() {\n    this.counter += 1;\n    this.currentPlatform.handleCorrectKey();\n    if (this.counter === this.target) {\n      this.goNext();\n    }\n  }\n  handleBadKey() {\n    this.counter = 0;\n    this.currentPlatform.handleBadKey();\n  }\n  goNext() {\n    console.log('GO NEXT');\n    this.index += 1;\n    this.currentPlatform = this.platforms[this.index];\n    this.counter = 0;\n    this.allObjects().forEach(object => {\n      object.falling = true;\n    });\n\n    // when revisiting this, we moved line 109's code above 114's to avoid console errors. I need to paint last letter still.\n    if (this.currentPlatform === undefined) {\n      console.log('you win!');\n      alert('level complete!');\n    } else {\n      this.player.position = {\n        x: this.platforms[this.index].position.x + 80,\n        y: this.platforms[this.index].position.y - 70\n      };\n      this.target = this.currentPlatform.word.string.length;\n      // this.loadNextLevel();\n    }\n\n    // this.player.position = {x: this.platforms[this.index].position.x + 80, y: this.platforms[this.index].position.y - 70}\n    // debugger\n\n    // this.target = this.currentPlatform.word.string.length;\n  }\n\n  // not currently utilized\n  // removeLowestPlatform() { //this could be in Platform - and you \n  //     this.platforms.shift(); // and you just call it in game instead\n  // }    \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/gameplay.js":
/*!*********************************!*\
  !*** ./src/scripts/gameplay.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n// think of what we need to inherit here\n\n\n// THIS SHOULD JUST DETECT KEYBINDS AND START THE ANIMATION LOOP\n\nclass Gameplay {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n    this.currentWord = this.game.currentPlatform.word.string; // or this.game.platforms[0].word.string?\n    this.targetWord = this.currentWord;\n    this.bindKeyHandlers();\n  }\n\n  //hypothetically make a start() method which will call animate, bindKey, and wordChecker, which will keep checking currentWord's length and send in a new word/platform/etc once you've typed the word out.\n\n  animate() {\n    // \n    // this.drawBackground(ctx); // this should draw the canvas\n    // this.moveObjects();       // this should update all objects position by the scrollSpeed\n    // debugger\n\n    this.game.update(this.ctx); //this will call update in game which will then call draw for game\n\n    // ok. right now game.draw calls draw in all classes\n    // so what would game.update do? game update needs to change the position of all objects, but taht would be taken care of by their respective classes. \n    // so game.update should just call all objects to update\n    // each object's update can then call its own draw\n    // game.draw can just draw the canvas\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  bindKeyHandlers() {\n    let rightChar = false;\n    document.addEventListener('keydown', e => {\n      const keyPressed = e.key;\n      // let currentWord = this.game.currentWord(); //THIS IS THE ISSUE RN\n      // let nextLetter = currentWord[0];\n\n      // console.log(e.key)\n      // console.log(this.currentWord)\n      // console.log(this.targetWord)\n\n      // just use an index reference here instead of mutating the string value in your words\n\n      //why save a separate variable and mutate it when you can just dive in and READ what's already there?\n      // - could save the currentWord to another var and slice that if you wish, but you could also do Game.currentPlatform.word.string[i] or something like\n      // let i = 0;\n      // could also say let currentWord = Game.Platform[0].word.string[i] (LMAO) then do this:\n      // if keyPressed = this.currentWord[i] {\n      // handleCorrectKeyPress()\n      // else \n      // handleBadKeyPress() and then rest i = 0\n      // }\n\n      // if good key press\n      //      Game.handleCorrectKeyPress\n      // else \n      //      Game.handleBadKeyPress\n\n      // let i = 0; // i is going to get reset after every key press so I can't save an i here..\n\n      // let currentWord = this.game.currentPlatform.word.string;\n      // let targetWord = currentWord;\n      if (keyPressed === this.targetWord[0]) {\n        // console.log('success'); // for testing\n        this.targetWord = this.targetWord.slice(1);\n        this.game.handleCorrectKey();\n        if (this.targetWord.length === 0) {\n          this.currentWord = this.game.currentPlatform.word.string;\n          this.targetWord = this.currentWord;\n        }\n      } else {\n        // console.log('miss'); //also for testing\n        this.targetWord = this.currentWord;\n        this.game.handleBadKey();\n      }\n\n      //we're refactoring this right now.\n      // if (keyPressed === this.currentWord[0]) {\n      //     console.log('success')\n      //     this.currentWord = this.currentWord.slice(1);\n      //     // nextLetter = currentWord[0];\n      //     //some logic to change the index value in your letter painting\n      //     // rightChar = true;\n      //     //THIS CODE NEEDS TO GO IN A DIFF FUNCTION, but for now...\n      //     if (this.currentWord.length === 0) {this.game.player.position = {x: 400, y: 400}} \n      //     // ^ that code isn't working. will i need to make a new Player instance when I want to teleport? we'll figure this out in a bit\n      //     } else {\n      //         console.log('miss')\n      // }\n    });\n  }\n\n  // if (currentWord.length === 0) {\n  //     player.position = {\n  //         x: (platforms[1].position.x + platform.width) / 2,\n  //         y: platforms[1].position.y + platform.height\n  //     } \n  //         // change this to make sure player is on top of, not inside, platform\n  //     currentWord = remainingWords.shift();\n  // }\n}\n\n// start() {\n//     this.\n// }\n\n//regarding scrolling... \n// if player.position.y <= 60% canvas height, give all objects extra velocity to scroll them down to ~20? we'll see.\n\n// none of this is needed atm because I'm just teleporting the character to the next plaform, for now\n\n// //\n// // ***REMEMBER THAT THIS IS ALL PLAGIARIZED AT THE MOMENT. MAKE IT YOUR OWN***\n// //\n// animate() { //the animation loop (also contains player movement)\n//     requestAnimationFrame(animate)\n//     ctx.clearRect(0, 0, canvas.width, canvas.height)\n//     player.update()\n//     platforms.forEach(platform => {\n//         platform.draw()\n//     })\n\n//     if (keys.right.pressed && player.position.x < 400) { // added <400 for screen bounds\n//         player.velocity.x = 5\n//     } else if (keys.left.pressed && player.position.x > 100) {\n//         player.velocity.x = -5 \n//     } else {\n//         player.velocity.x = 0\n\n//         if (keys.right.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x -= 5\n//             })\n//             // for your project, put in a background.forEach(river => { river.position.y -= 2}) or something like that for your parallax effect (might not be fully necessary though, tbh)\n//         } else if (keys.left.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x += 5\n//             })\n//         }\n//     }\n\n//     // PLATFORM COLLISION DETECTION\n//     platforms.forEach(platform => {\n//         if (player.position.y + player.height <= platform.position.y && player.position.y + player.height + player.velocity.y >= platform.position.y && player.position.x + player.width >= platform.position.x && player.position.x <= platform.position.x + platform.width) {\n//             player.velocity.y = 0\n//         }\n//     })\n// }\n\n// animate() //this is calling the loop ^\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gameplay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/gameplay.js\n");

/***/ }),

/***/ "./src/scripts/platform.js":
/*!*********************************!*\
  !*** ./src/scripts/platform.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\nclass Platform {\n  static START_X = 200;\n  static BASE_Y = 30;\n  static HEIGHT = 20;\n  static WIDTH = 250;\n  static COUNT = 3; //this should probably be in Game.\n  static GRAVITY = 5;\n  constructor(wordString, _ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.word = new _word__WEBPACK_IMPORTED_MODULE_0__[\"default\"](wordString, {\n      x,\n      y\n    });\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.falling = false;\n  }\n  draw(ctx) {\n    // do i want to pass platform.draw a position as parameter?\n    // debugger\n    ctx.fillStyle = \"#DEFF55\";\n    // ctx.fillRect(this.position.x, this.position.y, Platform.WIDTH, Platform.HEIGHT)\n    ctx.beginPath();\n    ctx.roundRect(this.position.x, this.position.y, Platform.WIDTH, Platform.HEIGHT, [6]);\n    ctx.fill();\n    ctx.closePath();\n    // throw in word drawing logic here too\n    this.word.draw(ctx);\n  }\n  update() {\n    //next snapshot\n\n    if (this.falling) {\n      this.velocity.y += Platform.GRAVITY;\n    } else {\n      this.velocity.y = 0;\n    }\n\n    // this.draw()\n    this.position.y += this.velocity.y;\n    this.position.x += this.velocity.x;\n\n    // debugger\n    this.word.update(this.position);\n\n    // if (this.position.y + this.height + this.velocity.y >= 600) {\n    //     this.velocity.y = 0\n    // }\n  }\n\n  handleCorrectKey() {\n    this.word.handleCorrectKey();\n    // console.log(\"platform.Correct\")\n  }\n\n  handleBadKey() {\n    this.word.handleBadKey();\n    // console.log(\"platform.Bad\")\n  }\n}\n\n// at the very beginning, start with 2 hard-coded platforms in your platforms array, and then run the function addNewPlat() which is going to take the latest platform in your platforms array and then set a new x and y coordinate based off it's position. then it's going to make that new platform object and PUSH it into your platforms array as a queue.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Platform);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUF5QjtBQUV6QixNQUFNQyxRQUFRLENBQUM7RUFDWCxPQUFPQyxPQUFPLEdBQUcsR0FBRztFQUNwQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxLQUFLLEdBQUcsR0FBRztFQUNsQixPQUFPQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDbEIsT0FBT0MsT0FBTyxHQUFHLENBQUM7RUFFbEJDLFdBQVdBLENBQUNDLFVBQVUsRUFBQUMsSUFBQSxFQUFVO0lBQUEsSUFBUjtNQUFDQyxDQUFDO01BQUVDO0lBQUMsQ0FBQyxHQUFBRixJQUFBO0lBQzFCLElBQUksQ0FBQ0csSUFBSSxHQUFHLElBQUliLDZDQUFJLENBQUNTLFVBQVUsRUFBRTtNQUFDRSxDQUFDO01BQUVDO0lBQUMsQ0FBQyxDQUFDO0lBQ3hDLElBQUksQ0FBQ0UsUUFBUSxHQUFHO01BQ1pILENBQUMsRUFBRUEsQ0FBQztNQUNKQyxDQUFDLEVBQUVBO0lBQ1AsQ0FBQztJQUNELElBQUksQ0FBQ0csUUFBUSxHQUFHO01BQ1pKLENBQUMsRUFBRSxDQUFDO01BQ0pDLENBQUMsRUFBRTtJQUNQLENBQUM7SUFFRCxJQUFJLENBQUNJLE9BQU8sR0FBRyxLQUFLO0VBQ3hCO0VBRUFDLElBQUlBLENBQUNDLEdBQUcsRUFBRTtJQUFFO0lBQ1I7SUFDQUEsR0FBRyxDQUFDQyxTQUFTLEdBQUcsU0FBUztJQUN6QjtJQUNBRCxHQUFHLENBQUNFLFNBQVMsQ0FBQyxDQUFDO0lBQ2ZGLEdBQUcsQ0FBQ0csU0FBUyxDQUFDLElBQUksQ0FBQ1AsUUFBUSxDQUFDSCxDQUFDLEVBQUUsSUFBSSxDQUFDRyxRQUFRLENBQUNGLENBQUMsRUFBRVgsUUFBUSxDQUFDSSxLQUFLLEVBQUVKLFFBQVEsQ0FBQ0csTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckZjLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDLENBQUM7SUFDVkosR0FBRyxDQUFDSyxTQUFTLENBQUMsQ0FBQztJQUNmO0lBQ0EsSUFBSSxDQUFDVixJQUFJLENBQUNJLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0VBQ3ZCO0VBRUFNLE1BQU1BLENBQUEsRUFBRztJQUFJOztJQUVULElBQUksSUFBSSxDQUFDUixPQUFPLEVBQUU7TUFDZCxJQUFJLENBQUNELFFBQVEsQ0FBQ0gsQ0FBQyxJQUFJWCxRQUFRLENBQUNNLE9BQU87SUFDdkMsQ0FBQyxNQUFNO01BQ0gsSUFBSSxDQUFDUSxRQUFRLENBQUNILENBQUMsR0FBRyxDQUFDO0lBQ3ZCOztJQUVBO0lBQ0EsSUFBSSxDQUFDRSxRQUFRLENBQUNGLENBQUMsSUFBSSxJQUFJLENBQUNHLFFBQVEsQ0FBQ0gsQ0FBQztJQUNsQyxJQUFJLENBQUNFLFFBQVEsQ0FBQ0gsQ0FBQyxJQUFJLElBQUksQ0FBQ0ksUUFBUSxDQUFDSixDQUFDOztJQUVsQztJQUNBLElBQUksQ0FBQ0UsSUFBSSxDQUFDVyxNQUFNLENBQUMsSUFBSSxDQUFDVixRQUFRLENBQUM7O0lBRS9CO0lBQ0E7SUFDQTtFQUNKOztFQUVBVyxnQkFBZ0JBLENBQUEsRUFBRztJQUNmLElBQUksQ0FBQ1osSUFBSSxDQUFDWSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzVCO0VBQ0o7O0VBRUFDLFlBQVlBLENBQUEsRUFBRztJQUNYLElBQUksQ0FBQ2IsSUFBSSxDQUFDYSxZQUFZLENBQUMsQ0FBQztJQUN4QjtFQUNKO0FBRUo7O0FBR0E7O0FBSUEsK0RBQWV6QixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVHlwZXJKdW1wLy4vc3JjL3NjcmlwdHMvcGxhdGZvcm0uanM/ODZkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV29yZCBmcm9tICcuL3dvcmQnXHJcblxyXG5jbGFzcyBQbGF0Zm9ybSB7XHJcbiAgICBzdGF0aWMgU1RBUlRfWCA9IDIwMDtcclxuICAgIHN0YXRpYyBCQVNFX1kgPSAzMDtcclxuICAgIHN0YXRpYyBIRUlHSFQgPSAyMDtcclxuICAgIHN0YXRpYyBXSURUSCA9IDI1MDtcclxuICAgIHN0YXRpYyBDT1VOVCA9IDM7IC8vdGhpcyBzaG91bGQgcHJvYmFibHkgYmUgaW4gR2FtZS5cclxuICAgIHN0YXRpYyBHUkFWSVRZID0gNTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih3b3JkU3RyaW5nLCB7eCwgeX0pIHtcclxuICAgICAgICB0aGlzLndvcmQgPSBuZXcgV29yZCh3b3JkU3RyaW5nLCB7eCwgeX0pO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IHtcclxuICAgICAgICAgICAgeDogMCxcclxuICAgICAgICAgICAgeTogMFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5mYWxsaW5nID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjdHgpIHsgLy8gZG8gaSB3YW50IHRvIHBhc3MgcGxhdGZvcm0uZHJhdyBhIHBvc2l0aW9uIGFzIHBhcmFtZXRlcj9cclxuICAgICAgICAvLyBkZWJ1Z2dlclxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBcIiNERUZGNTVcIlxyXG4gICAgICAgIC8vIGN0eC5maWxsUmVjdCh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgUGxhdGZvcm0uV0lEVEgsIFBsYXRmb3JtLkhFSUdIVClcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LnJvdW5kUmVjdCh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgUGxhdGZvcm0uV0lEVEgsIFBsYXRmb3JtLkhFSUdIVCwgWzZdKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAvLyB0aHJvdyBpbiB3b3JkIGRyYXdpbmcgbG9naWMgaGVyZSB0b29cclxuICAgICAgICB0aGlzLndvcmQuZHJhdyhjdHgpO1xyXG4gICAgfTtcclxuXHJcbiAgICB1cGRhdGUoKSB7ICAgLy9uZXh0IHNuYXBzaG90XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmZhbGxpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55ICs9IFBsYXRmb3JtLkdSQVZJVFk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55ID0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHRoaXMuZHJhdygpXHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbi55ICs9IHRoaXMudmVsb2NpdHkueVxyXG4gICAgICAgIHRoaXMucG9zaXRpb24ueCArPSB0aGlzLnZlbG9jaXR5LnhcclxuXHJcbiAgICAgICAgLy8gZGVidWdnZXJcclxuICAgICAgICB0aGlzLndvcmQudXBkYXRlKHRoaXMucG9zaXRpb24pO1xyXG5cclxuICAgICAgICAvLyBpZiAodGhpcy5wb3NpdGlvbi55ICsgdGhpcy5oZWlnaHQgKyB0aGlzLnZlbG9jaXR5LnkgPj0gNjAwKSB7XHJcbiAgICAgICAgLy8gICAgIHRoaXMudmVsb2NpdHkueSA9IDBcclxuICAgICAgICAvLyB9XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQ29ycmVjdEtleSgpIHtcclxuICAgICAgICB0aGlzLndvcmQuaGFuZGxlQ29ycmVjdEtleSgpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwicGxhdGZvcm0uQ29ycmVjdFwiKVxyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZUJhZEtleSgpIHtcclxuICAgICAgICB0aGlzLndvcmQuaGFuZGxlQmFkS2V5KCk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJwbGF0Zm9ybS5CYWRcIilcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4vLyBhdCB0aGUgdmVyeSBiZWdpbm5pbmcsIHN0YXJ0IHdpdGggMiBoYXJkLWNvZGVkIHBsYXRmb3JtcyBpbiB5b3VyIHBsYXRmb3JtcyBhcnJheSwgYW5kIHRoZW4gcnVuIHRoZSBmdW5jdGlvbiBhZGROZXdQbGF0KCkgd2hpY2ggaXMgZ29pbmcgdG8gdGFrZSB0aGUgbGF0ZXN0IHBsYXRmb3JtIGluIHlvdXIgcGxhdGZvcm1zIGFycmF5IGFuZCB0aGVuIHNldCBhIG5ldyB4IGFuZCB5IGNvb3JkaW5hdGUgYmFzZWQgb2ZmIGl0J3MgcG9zaXRpb24uIHRoZW4gaXQncyBnb2luZyB0byBtYWtlIHRoYXQgbmV3IHBsYXRmb3JtIG9iamVjdCBhbmQgUFVTSCBpdCBpbnRvIHlvdXIgcGxhdGZvcm1zIGFycmF5IGFzIGEgcXVldWUuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYXRmb3JtO1xyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiV29yZCIsIlBsYXRmb3JtIiwiU1RBUlRfWCIsIkJBU0VfWSIsIkhFSUdIVCIsIldJRFRIIiwiQ09VTlQiLCJHUkFWSVRZIiwiY29uc3RydWN0b3IiLCJ3b3JkU3RyaW5nIiwiX3JlZiIsIngiLCJ5Iiwid29yZCIsInBvc2l0aW9uIiwidmVsb2NpdHkiLCJmYWxsaW5nIiwiZHJhdyIsImN0eCIsImZpbGxTdHlsZSIsImJlZ2luUGF0aCIsInJvdW5kUmVjdCIsImZpbGwiLCJjbG9zZVBhdGgiLCJ1cGRhdGUiLCJoYW5kbGVDb3JyZWN0S2V5IiwiaGFuZGxlQmFkS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/platform.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n  static START_X = 240;\n  static START_Y = 400;\n  static GRAVITY = 5;\n  constructor() {\n    this.position = {\n      x: Player.START_X,\n      y: Player.START_Y\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.width = 90;\n    this.height = 90;\n    this.sprite = new Image();\n    this.sprite.src = '../assets/frogSprite.png';\n  }\n  draw(ctx) {\n    // ctx.fillStyle = \"#9AD914\"\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height)\n    // const image = new Image();\n    // image.onload = draw\n\n    ctx.drawImage(this.sprite, this.position.x, this.position.y, this.width, this.height);\n  }\n  update() {\n    //\n    this.position.y += this.velocity.y;\n    this.position.x += this.velocity.x;\n    if (this.position.y + this.height + this.velocity.y <= 600) {\n      this.velocity.y += Player.GRAVITY;\n    } else {\n      this.position.y = 600 - this.height;\n      this.velocity.y = 0;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNULE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCLE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCLE9BQU9DLE9BQU8sR0FBRyxDQUFDO0VBRWxCQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBRztNQUNaQyxDQUFDLEVBQUVOLE1BQU0sQ0FBQ0MsT0FBTztNQUNqQk0sQ0FBQyxFQUFFUCxNQUFNLENBQUNFO0lBQ2QsQ0FBQztJQUNELElBQUksQ0FBQ00sUUFBUSxHQUFHO01BQ1pGLENBQUMsRUFBRSxDQUFDO01BQ0pDLENBQUMsRUFBRTtJQUNQLENBQUM7SUFFRCxJQUFJLENBQUNFLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtJQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJQyxLQUFLLENBQUMsQ0FBQztJQUN6QixJQUFJLENBQUNELE1BQU0sQ0FBQ0UsR0FBRyxHQUFHLDBCQUEwQjtFQUNoRDtFQUVBQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFDTjtJQUNBO0lBQ0E7SUFDQTs7SUFFQUEsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDTCxNQUFNLEVBQUUsSUFBSSxDQUFDTixRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxFQUFFLElBQUksQ0FBQ0UsS0FBSyxFQUFFLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0VBQ3pGO0VBRUFPLE1BQU1BLENBQUEsRUFBRztJQUFJO0lBQ1QsSUFBSSxDQUFDWixRQUFRLENBQUNFLENBQUMsSUFBSSxJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsQ0FBQztJQUNsQyxJQUFJLENBQUNGLFFBQVEsQ0FBQ0MsQ0FBQyxJQUFJLElBQUksQ0FBQ0UsUUFBUSxDQUFDRixDQUFDO0lBRWxDLElBQUksSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsR0FBRyxJQUFJLENBQUNHLE1BQU0sR0FBRyxJQUFJLENBQUNGLFFBQVEsQ0FBQ0QsQ0FBQyxJQUFJLEdBQUcsRUFBRTtNQUN4RCxJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsQ0FBQyxJQUFJUCxNQUFNLENBQUNHLE9BQU87SUFDckMsQ0FBQyxNQUFNO01BQ0gsSUFBSSxDQUFDRSxRQUFRLENBQUNFLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDRyxNQUFNO01BQ25DLElBQUksQ0FBQ0YsUUFBUSxDQUFDRCxDQUFDLEdBQUcsQ0FBQztJQUN2QjtFQUNKO0FBQ0o7QUFJQSwrREFBZVAsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL1R5cGVySnVtcC8uL3NyYy9zY3JpcHRzL3BsYXllci5qcz82NDcxIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBsYXllciB7XHJcbiAgICBzdGF0aWMgU1RBUlRfWCA9IDI0MDtcclxuICAgIHN0YXRpYyBTVEFSVF9ZID0gNDAwO1xyXG4gICAgc3RhdGljIEdSQVZJVFkgPSA1O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XHJcbiAgICAgICAgICAgIHg6IFBsYXllci5TVEFSVF9YLFxyXG4gICAgICAgICAgICB5OiBQbGF5ZXIuU1RBUlRfWVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnZlbG9jaXR5ID0ge1xyXG4gICAgICAgICAgICB4OiAwLFxyXG4gICAgICAgICAgICB5OiAwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMud2lkdGggPSA5MFxyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gOTBcclxuICAgICAgICB0aGlzLnNwcml0ZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNyYyA9ICcuLi9hc3NldHMvZnJvZ1Nwcml0ZS5wbmcnXHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjdHgpIHtcclxuICAgICAgICAvLyBjdHguZmlsbFN0eWxlID0gXCIjOUFEOTE0XCJcclxuICAgICAgICAvLyBjdHguZmlsbFJlY3QodGhpcy5wb3NpdGlvbi54LCB0aGlzLnBvc2l0aW9uLnksIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KVxyXG4gICAgICAgIC8vIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgLy8gaW1hZ2Uub25sb2FkID0gZHJhd1xyXG5cclxuICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuc3ByaXRlLCB0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpXHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCkgeyAgIC8vXHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbi55ICs9IHRoaXMudmVsb2NpdHkueVxyXG4gICAgICAgIHRoaXMucG9zaXRpb24ueCArPSB0aGlzLnZlbG9jaXR5LnhcclxuXHJcbiAgICAgICAgaWYgKHRoaXMucG9zaXRpb24ueSArIHRoaXMuaGVpZ2h0ICsgdGhpcy52ZWxvY2l0eS55IDw9IDYwMCkge1xyXG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgKz0gUGxheWVyLkdSQVZJVFlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uLnkgPSA2MDAgLSB0aGlzLmhlaWdodDtcclxuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55ID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGxheWVyOyJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJTVEFSVF9YIiwiU1RBUlRfWSIsIkdSQVZJVFkiLCJjb25zdHJ1Y3RvciIsInBvc2l0aW9uIiwieCIsInkiLCJ2ZWxvY2l0eSIsIndpZHRoIiwiaGVpZ2h0Iiwic3ByaXRlIiwiSW1hZ2UiLCJzcmMiLCJkcmF3IiwiY3R4IiwiZHJhd0ltYWdlIiwidXBkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/word.js":
/*!*****************************!*\
  !*** ./src/scripts/word.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n\nclass Word {\n  constructor(string, _ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    this.string = string;\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.index = 0;\n    // this.letters = string.split('');\n  }\n\n  // wordBank = ['peck', 'push', 'coin', 'grim', 'soup', 'clap', 'nail', 'nuts', 'fine', 'walk', 'skelp', 'clock', 'sizes', 'elder', 'thief', 'thine', 'pious', 'dizzy', 'dazed', 'cloud', 'vital', 'these', 'excel', 'dodge', 'cease', 'being', 'pasty', 'abyss', 'hinder', 'alone', 'rewire', 'dragon', 'screwy', 'willed', 'basted', 'seeker', 'wagers', 'rabies', 'knight', 'larynx', 'winery', 'foiled', 'tartar', 'inmate', 'hornet', 'higher', 'deluge', 'zenith', 'hollow', 'mantis', 'tinted', 'infuse', 'planner', 'trussed', 'protium', 'pursuit', 'cogency', 'affable', 'thunder', 'clapped', 'subsale', 'cayenne', 'sifting', 'reorder', 'commend', 'minimum', 'bascule', 'inflict', 'overplan', 'function', 'fathered', 'flimflam', 'veracity', 'tutorial', 'frumpily', 'injuring', 'airliner', 'mistress', 'humoring', 'dressage', 'gemstone', 'gigaflop', 'scorning', 'rocklike', 'defender', 'vocalizes', 'whittling', 'nightmare', 'colosseum', 'confessed', 'debutante', 'insidious', 'micropore', 'omelettes', 'recumbent', 'moderates', 'weaponize', 'gyroscopic', 'dishearten', 'authorized', 'unfaithful', 'unbottling', 'crystalline']\n\n  // remainingWords = wordBank.sort(() => Math.random() - 0.5);\n\n  // currentWord = remainingWords.shift();\n\n  //\n  //on a bad key press, reset the index back to 0\n  //reset index is a WORD function, which has to get called by a \"handleBADkeypress\"\n  //\n\n  //instead of filling text with full string, draw each letter one at a time.\n  // for each letter's position, \n\n  //every word instance will start with this.index = 0\n  //give word class some type of function like \"handleCorrectKeyPress()\"\n  // - gonna take this.index ++\n\n  // THEN TELL PLATFORM IN ITS LOGIC TO ALSO handleCorrectKeyPress()\n  // - on a good key press, tell this.word.handleCorrectKeyPress()\n\n  // utilize a for (i)loop and do \n  // ctx.fillText (this.letters[i], this.position.x + \n  //*platform width/3 +)\n  // if i is less than this.index\n\n  paintLastGreen(ctx) {\n    // debugger\n    if (this.index < this.string.length - 1) {\n      ctx.font = '32px CuteFrog';\n      ctx.fillStyle = '#rgba(255, 255, 255, 0.5)'; // - this is red\n      ctx.fillText(this.string.slice(0, this.index), this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    } else if (this.index === this.string.length) {\n      ctx.font = '32.px CuteFrog';\n      ctx.fillStyle = '#00BD00';\n      ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    }\n  }\n  drawGreen(ctx) {\n    for (let i = 0; i < this.index; i++) {\n      ctx.font = '32px CuteFrog';\n      ctx.fillStyle = '#00BD00'; // - this is green\n      ctx.fillText(this.string.slice(0, this.index), this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    }\n  }\n  draw(ctx) {\n    // debugger\n    ctx.font = '32px CuteFrog';\n    ctx.fillStyle = '#BF0436';\n    // console.log(this.position)\n    ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n    this.drawGreen(ctx);\n    this.paintLastGreen(ctx);\n\n    // this will be used when highlighting input\n    // ctx.fillStyle = 'blue'\n    // ctx.fillText(this.string.slice(0, 3), this.position.x, this.position.y, Platform.WIDTH)\n\n    // ctx.font = '32px Cursive';\n    // ctx.fillStyle = '#DC35F2';\n    // ctx.fillText('start', 600, 340)//this pos would be same as plat\n    // fillText(text, x, y, maxWidth)//this maxWidth would be platwidth\n  }\n\n  update(position) {\n    //next snapshot\n    this.position.x = position.x;\n    this.position.y = position.y;\n\n    //maybe something like this.drawRed() and this.drawGreen()?\n    //**remember this is the logic where kyle talked about using a constant that would increment by a couple pixels for each letter individually\n  }\n\n  handleCorrectKey() {\n    this.index += 1;\n    // if (this.index === this.string.length-1) {\n    //     this.paintLastGreen();\n    // }\n    // console.log(\"word.Correct\")\n  }\n\n  handleBadKey() {\n    this.resetIndex(); //or we could just put index = 0 here..\n    // console.log(\"word.Bad\")\n  }\n\n  resetIndex() {\n    this.index = 0;\n  }\n\n  // in the for loop that iterates over the words you want on the screen and draws them... if index === 0, send it do a different draw function(?) that'll highlight with red. other words that you don't want them to type will be written in green or something\n  // then when you're checking key inputs to see if the user has pressed the correct letters, add each letter to a lettersPressed array,\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Word);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;