/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/gameplay */ \"./src/scripts/gameplay.js\");\n// this is your entry file - this is what Webpack will read\n\n// import Player from \"./scripts/player\";\n// import Platform from \"./scripts/platform\";\n// import Word from \"./scripts/word\";\n// ^for testing purposes rn. get rid of those once you have things properly imported and set in Game/Gameplay\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1000; // optimize this for 13-inch macbook pro when the\n  canvas.height = 650; // time comes\n\n  const gameplay = new _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx).animate();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ1E7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFFBQVEsQ0FBQztFQUNoRCxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQztFQUVuQ0gsTUFBTSxDQUFDSSxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUU7RUFDdEJKLE1BQU0sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFFOztFQUV0QixNQUFNQyxRQUFRLEdBQUcsSUFBSVQseURBQVEsQ0FBQ0ssR0FBRyxDQUFDLENBQUNLLE9BQU8sQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1R5cGVySnVtcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaXMgaXMgeW91ciBlbnRyeSBmaWxlIC0gdGhpcyBpcyB3aGF0IFdlYnBhY2sgd2lsbCByZWFkXHJcblxyXG4vLyBpbXBvcnQgUGxheWVyIGZyb20gXCIuL3NjcmlwdHMvcGxheWVyXCI7XHJcbi8vIGltcG9ydCBQbGF0Zm9ybSBmcm9tIFwiLi9zY3JpcHRzL3BsYXRmb3JtXCI7XHJcbi8vIGltcG9ydCBXb3JkIGZyb20gXCIuL3NjcmlwdHMvd29yZFwiO1xyXG4vLyBeZm9yIHRlc3RpbmcgcHVycG9zZXMgcm4uIGdldCByaWQgb2YgdGhvc2Ugb25jZSB5b3UgaGF2ZSB0aGluZ3MgcHJvcGVybHkgaW1wb3J0ZWQgYW5kIHNldCBpbiBHYW1lL0dhbWVwbGF5XHJcblxyXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWVcIjtcclxuaW1wb3J0IEdhbWVwbGF5IGZyb20gXCIuL3NjcmlwdHMvZ2FtZXBsYXlcIjtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKVxyXG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJylcclxuXHJcbiAgICBjYW52YXMud2lkdGggPSAxMDAwOyAgLy8gb3B0aW1pemUgdGhpcyBmb3IgMTMtaW5jaCBtYWNib29rIHBybyB3aGVuIHRoZVxyXG4gICAgY2FudmFzLmhlaWdodCA9IDY1MDsgIC8vIHRpbWUgY29tZXNcclxuXHJcbiAgICBjb25zdCBnYW1lcGxheSA9IG5ldyBHYW1lcGxheShjdHgpLmFuaW1hdGUoKTtcclxufSlcclxuIl0sIm5hbWVzIjpbIkdhbWUiLCJHYW1lcGxheSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhcyIsImdldEVsZW1lbnRCeUlkIiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiaGVpZ2h0IiwiZ2FtZXBsYXkiLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\n\n\n\n// after you chop off the first word element from your platforms array, .push that into a \"completedWords\" array so that you can keep track of how many words were typed (also this'll help you make sure that your code is working properly)\n// SRS for words that are not perfectly typed, send them back into your wordbank\n// or just make a counter instead of moving the whole word into your array of completedWords. just have completedWords = 0 then ++ when they finish a word.\n\nclass Game {\n  static TEMPWORDBANK = ['nextword', 'thisShouldBreakTheGame']; // this will eventually get replaced by real wordbank (lol)\n  static DEFAULT_POS = {\n    x: 69,\n    y: 69\n  }; // this is probably useless now\n  static START_PLATFORM = new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('start', {\n    x: 150,\n    y: 600\n  });\n  static NEW_POSITIONS = [{\n    x: 150,\n    y: 300\n  }, {\n    x: 600,\n    y: 300\n  }];\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.words = []; //this is probably unnecessary\n    this.myQueue = [Game.START_PLATFORM];\n    this.platforms = this.platformsOnScreen();\n    this.player = [new _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()];\n  }\n  platformsQueue() {\n    // let myQueue = [Game.START_PLATFORM];\n    // debugger\n    this.myQueue.push(this.generateNewPlatform());\n    // console.log(myQueue)\n    return this.myQueue;\n  }\n  platformsOnScreen() {\n    let maxPlats = 2;\n    let screenPlats = [];\n    while (screenPlats.length < maxPlats) {\n      screenPlats.push(this.platformsQueue().shift()); // might not work register on the other function though...\n    }\n    // console.log(screenPlats)\n    return screenPlats;\n  }\n  generateNewPlatform() {\n    let wordString = Game.TEMPWORDBANK.shift(); // this took wordbank word\n\n    // let wordObject = new Word(wordString, Game.NEW_POSITIONS[Math.floor(Math.random() * 2)]); // this took that string and made it a word object and gave it a random position\n\n    let nextPlatform = new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](wordString, Game.NEW_POSITIONS[Math.floor(Math.random() * 2)]);\n    return nextPlatform;\n  }\n  currentWord() {\n    return this.platforms[0].word.string;\n  }\n\n  // generatePlatforms() { //i'm gonna need a helper function here to return\n  //     const xPositions = [{x: 150, y: 300}, {x: 600, y: 300}];\n  //     let myPlatforms = [];\n  //     console.log(Game.TEMPWORDBANK)\n\n  //     // this logic below isn't working at all. maybe try separating it.\n  //     while (myPlatforms.length < 2) {  //THIS IS FIRING OFF EVERY PLATFORM BECAUSE THE ONLY CONDITION FOR THE ITERATION IS < 2. AFTER THAT IT'S JUST ITERATING THROUGH THE ENTIRE PLATFORM, REGARDLESS OF MYPLAT LENGTH\n  //         Game.TEMPWORDBANK.forEach(word => {\n  //             myPlatforms.push(new Platform(word, Game.DEFAULT_POS)) // *******\n  //         })\n  //     }\n  //     // return myPlatforms;\n\n  //     //right now this function is making an array with Platform instances with a dummy position, THEN it's going over that array and changing the position again. just generate with a position set.\n\n  //     // debugger\n  //     for (let i = 0; i < Game.NUM_PLATFORMS; i++) {\n  //         let randomSpot = xPositions[Math.floor(Math.random() * 2)];\n  //         if (i === 0) { \n  //             myPlatforms[i].position = {x: 150, y: 600}\n  //             myPlatforms[i].word.position = {x: 150, y:600}\n  //         } else {\n  //           myPlatforms[i].position = randomSpot;\n  //           myPlatforms[i].word.position = randomSpot;\n  //         }\n  //     }\n  //     // debugger\n\n  //     // console.log(myPlatforms);\n  //     return myPlatforms;\n  // }\n\n  // currentWord = this.words.slice(1)\n\n  allObjects() {\n    return this.platforms.concat(this.player);\n  }\n  draw(ctx) {\n    // debugger\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = \"#81D5FF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // debugger\n\n    this.allObjects().forEach(object => {\n      object.draw(ctx);\n    });\n  }\n\n  // for scrolling later - idk if I can dynamically scroll if I'm generating platforms from an array though....\n  // allObjects = platforms.concat(players).concat(words)\n  // allObjects.forEach(object => object.position.y += 5)\n\n  // Question for Kyle: when I clearRect and re-draw during the animation loop, won't the platforms/words get re-drawn at their initialized position instead of updated position?\n  // ^regarding question above, this is irrelevant if we don't have a constant scroll. so let's table it for now.\n  // - if I don't want my platforms to reset, I should shift them out of my platforms array after I draw them and instead of calling .draw from within a forEach loop, I should just call .draw on the platforms.shift().\n\n  // this should probably all go in 1 game loop function / animate function\n  // generatePlatforms() {\n  //     for (let i = 0; i < platformCount; i++) {\n  //         // let platformX = js equivalent of array.sample from two possible X positions\n  //         let platformY = platforms[1].position.y - 300;\n  //         this.platforms.push(new Platform({x: platformX, y: platformY}))\n  //     }\n  // }\n\n  removeLowestPlatform() {\n    //this could be in Platform - and you \n    this.platforms.shift(); // and you just call it in game instead\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/gameplay.js":
/*!*********************************!*\
  !*** ./src/scripts/gameplay.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n// think of what we need to inherit here\n\n\n// THIS SHOULD JUST DETECT KEYBINDS AND START THE ANIMATION LOOP\n\nclass Gameplay {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n    this.currentWord = this.game.currentWord(); // or this.game.platforms[0].word.string?\n    this.bindKeyHandlers();\n  }\n\n  // static scrollSpeed = 0.5\n\n  //hypothetically make a start() method which will call animate, bindKey, and wordChecker, which will keep checking currentWord's length and send in a new word/platform/etc once you've typed the word out.\n\n  animate() {\n    // \n    // this.drawBackground(ctx); // this should draw the canvas\n    // this.moveObjects();       // this should update all objects position by the scrollSpeed\n    // debugger\n    this.game.draw(this.ctx); // and this should re-draw all objects after having been scrolled\n    // debugger\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  bindKeyHandlers() {\n    let rightChar = false;\n    document.addEventListener('keydown', e => {\n      const keyPressed = e.key;\n      // let currentWord = this.game.currentWord(); //THIS IS THE ISSUE RN\n      // let nextLetter = currentWord[0];\n\n      console.log(e.key);\n\n      // just use an index reference here instead of mutating the string value in your words\n\n      if (keyPressed === this.currentWord[0]) {\n        console.log('success');\n        this.currentWord = this.currentWord.slice(1);\n        // nextLetter = currentWord[0];\n        //some logic to change the index value in your letter painting\n        rightChar = true;\n        //THIS CODE NEEDS TO GO IN A DIFF FUNCTION, but for now...\n        if (this.currentWord.length === 0) {\n          this.game.player.position = {\n            x: 400,\n            y: 400\n          };\n        }\n        // ^ that code isn't working. will i need to make a new Player instance when I want to teleport? we'll figure this out in a bit\n      } else {\n        console.log('miss');\n      }\n    });\n  }\n  // if (currentWord.length === 0) {\n  //     player.position = {\n  //         x: (platforms[1].position.x + platform.width) / 2,\n  //         y: platforms[1].position.y + platform.height\n  //     } \n  //         // change this to make sure player is on top of, not inside, platform\n  //     currentWord = remainingWords.shift();\n  // }\n}\n\n// start() {\n//     this.\n// }\n\n//regarding scrolling... \n// if player.position.y <= 60% canvas height, give all objects extra velocity to scroll them down to ~20? we'll see.\n\n// none of this is needed atm because I'm just teleporting the character to the next plaform, for now\n\n// //\n// // ***REMEMBER THAT THIS IS ALL PLAGIARIZED AT THE MOMENT. MAKE IT YOUR OWN***\n// //\n// animate() { //the animation loop (also contains player movement)\n//     requestAnimationFrame(animate)\n//     ctx.clearRect(0, 0, canvas.width, canvas.height)\n//     player.update()\n//     platforms.forEach(platform => {\n//         platform.draw()\n//     })\n\n//     if (keys.right.pressed && player.position.x < 400) { // added <400 for screen bounds\n//         player.velocity.x = 5\n//     } else if (keys.left.pressed && player.position.x > 100) {\n//         player.velocity.x = -5 \n//     } else {\n//         player.velocity.x = 0\n\n//         if (keys.right.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x -= 5\n//             })\n//             // for your project, put in a background.forEach(river => { river.position.y -= 2}) or something like that for your parallax effect (might not be fully necessary though, tbh)\n//         } else if (keys.left.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x += 5\n//             })\n//         }\n//     }\n\n//     // PLATFORM COLLISION DETECTION\n//     platforms.forEach(platform => {\n//         if (player.position.y + player.height <= platform.position.y && player.position.y + player.height + player.velocity.y >= platform.position.y && player.position.x + player.width >= platform.position.x && player.position.x <= platform.position.x + platform.width) {\n//             player.velocity.y = 0\n//         }\n//     })\n// }\n\n// animate() //this is calling the loop ^\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gameplay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/gameplay.js\n");

/***/ }),

/***/ "./src/scripts/platform.js":
/*!*********************************!*\
  !*** ./src/scripts/platform.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\nclass Platform {\n  static START_X = 200;\n  static BASE_Y = 30;\n  static HEIGHT = 20;\n  static WIDTH = 250;\n  static COUNT = 3; //this should probably be in Game.\n  // static START_WORD = new Word('start', {x: 150, y: 600})\n\n  constructor(word, position) {\n    this.word = new _word__WEBPACK_IMPORTED_MODULE_0__[\"default\"](word, position);\n    this.position = {\n      x: position.x,\n      y: position.y\n    };\n    // this.width = 250\n    // this.height = 20\n  }\n\n  //setter\n  // set position(newPosition) {\n  //     this._position = {\n  //         x: newPosition.x,\n  //         y: newPosition.y\n  //     };\n  //     this.word.position = {\n  //         x: newPosition.x,\n  //         y: newPosition.y\n  //     }\n  // }\n\n  // platforms = []; // confused here because when gameplay draws these, it'll have 2 hard-coded platforms to start with\n\n  draw(ctx) {\n    // do i want to pass platform.draw a position as parameter?\n    // debugger\n    ctx.fillStyle = \"#DEFF55\";\n    ctx.fillRect(this.position.x, this.position.y, Platform.WIDTH, Platform.HEIGHT);\n    // throw in word drawing logic here too\n    this.word.draw(ctx);\n  }\n}\n\n// at the very beginning, start with 2 hard-coded platforms in your platforms array, and then run the function addNewPlat() which is going to take the latest platform in your platforms array and then set a new x and y coordinate based off it's position. then it's going to make that new platform object and PUSH it into your platforms array as a queue.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Platform);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUF5QjtBQUV6QixNQUFNQyxRQUFRLENBQUM7RUFDWCxPQUFPQyxPQUFPLEdBQUcsR0FBRztFQUNwQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxLQUFLLEdBQUcsR0FBRztFQUNsQixPQUFPQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDbEI7O0VBRUFDLFdBQVdBLENBQUNDLElBQUksRUFBRUMsUUFBUSxFQUFFO0lBQ3hCLElBQUksQ0FBQ0QsSUFBSSxHQUFHLElBQUlSLDZDQUFJLENBQUNRLElBQUksRUFBRUMsUUFBUSxDQUFDO0lBQ3BDLElBQUksQ0FBQ0EsUUFBUSxHQUFHO01BQ1pDLENBQUMsRUFBRUQsUUFBUSxDQUFDQyxDQUFDO01BQ2JDLENBQUMsRUFBRUYsUUFBUSxDQUFDRTtJQUNoQixDQUFDO0lBQ0Q7SUFDQTtFQUNKOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0VBRUE7O0VBRUFDLElBQUlBLENBQUNDLEdBQUcsRUFBRTtJQUFFO0lBQ1I7SUFDQUEsR0FBRyxDQUFDQyxTQUFTLEdBQUcsU0FBUztJQUN6QkQsR0FBRyxDQUFDRSxRQUFRLENBQUMsSUFBSSxDQUFDTixRQUFRLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsQ0FBQyxFQUFFVixRQUFRLENBQUNJLEtBQUssRUFBRUosUUFBUSxDQUFDRyxNQUFNLENBQUM7SUFDL0U7SUFDQSxJQUFJLENBQUNJLElBQUksQ0FBQ0ksSUFBSSxDQUFDQyxHQUFHLENBQUM7RUFDdkI7QUFFSjs7QUFHQTs7QUFJQSwrREFBZVosUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL1R5cGVySnVtcC8uL3NyYy9zY3JpcHRzL3BsYXRmb3JtLmpzPzg2ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdvcmQgZnJvbSAnLi93b3JkJ1xyXG5cclxuY2xhc3MgUGxhdGZvcm0ge1xyXG4gICAgc3RhdGljIFNUQVJUX1ggPSAyMDA7XHJcbiAgICBzdGF0aWMgQkFTRV9ZID0gMzA7XHJcbiAgICBzdGF0aWMgSEVJR0hUID0gMjA7XHJcbiAgICBzdGF0aWMgV0lEVEggPSAyNTA7XHJcbiAgICBzdGF0aWMgQ09VTlQgPSAzOyAvL3RoaXMgc2hvdWxkIHByb2JhYmx5IGJlIGluIEdhbWUuXHJcbiAgICAvLyBzdGF0aWMgU1RBUlRfV09SRCA9IG5ldyBXb3JkKCdzdGFydCcsIHt4OiAxNTAsIHk6IDYwMH0pXHJcblxyXG4gICAgY29uc3RydWN0b3Iod29yZCwgcG9zaXRpb24pIHtcclxuICAgICAgICB0aGlzLndvcmQgPSBuZXcgV29yZCh3b3JkLCBwb3NpdGlvbik7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgeDogcG9zaXRpb24ueCxcclxuICAgICAgICAgICAgeTogcG9zaXRpb24ueVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0aGlzLndpZHRoID0gMjUwXHJcbiAgICAgICAgLy8gdGhpcy5oZWlnaHQgPSAyMFxyXG4gICAgfVxyXG5cclxuICAgIC8vc2V0dGVyXHJcbiAgICAvLyBzZXQgcG9zaXRpb24obmV3UG9zaXRpb24pIHtcclxuICAgIC8vICAgICB0aGlzLl9wb3NpdGlvbiA9IHtcclxuICAgIC8vICAgICAgICAgeDogbmV3UG9zaXRpb24ueCxcclxuICAgIC8vICAgICAgICAgeTogbmV3UG9zaXRpb24ueVxyXG4gICAgLy8gICAgIH07XHJcbiAgICAvLyAgICAgdGhpcy53b3JkLnBvc2l0aW9uID0ge1xyXG4gICAgLy8gICAgICAgICB4OiBuZXdQb3NpdGlvbi54LFxyXG4gICAgLy8gICAgICAgICB5OiBuZXdQb3NpdGlvbi55XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIHBsYXRmb3JtcyA9IFtdOyAvLyBjb25mdXNlZCBoZXJlIGJlY2F1c2Ugd2hlbiBnYW1lcGxheSBkcmF3cyB0aGVzZSwgaXQnbGwgaGF2ZSAyIGhhcmQtY29kZWQgcGxhdGZvcm1zIHRvIHN0YXJ0IHdpdGhcclxuXHJcbiAgICBkcmF3KGN0eCkgeyAvLyBkbyBpIHdhbnQgdG8gcGFzcyBwbGF0Zm9ybS5kcmF3IGEgcG9zaXRpb24gYXMgcGFyYW1ldGVyP1xyXG4gICAgICAgIC8vIGRlYnVnZ2VyXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiI0RFRkY1NVwiXHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCBQbGF0Zm9ybS5XSURUSCwgUGxhdGZvcm0uSEVJR0hUKVxyXG4gICAgICAgIC8vIHRocm93IGluIHdvcmQgZHJhd2luZyBsb2dpYyBoZXJlIHRvb1xyXG4gICAgICAgIHRoaXMud29yZC5kcmF3KGN0eClcclxuICAgIH0gXHJcblxyXG59XHJcblxyXG5cclxuLy8gYXQgdGhlIHZlcnkgYmVnaW5uaW5nLCBzdGFydCB3aXRoIDIgaGFyZC1jb2RlZCBwbGF0Zm9ybXMgaW4geW91ciBwbGF0Zm9ybXMgYXJyYXksIGFuZCB0aGVuIHJ1biB0aGUgZnVuY3Rpb24gYWRkTmV3UGxhdCgpIHdoaWNoIGlzIGdvaW5nIHRvIHRha2UgdGhlIGxhdGVzdCBwbGF0Zm9ybSBpbiB5b3VyIHBsYXRmb3JtcyBhcnJheSBhbmQgdGhlbiBzZXQgYSBuZXcgeCBhbmQgeSBjb29yZGluYXRlIGJhc2VkIG9mZiBpdCdzIHBvc2l0aW9uLiB0aGVuIGl0J3MgZ29pbmcgdG8gbWFrZSB0aGF0IG5ldyBwbGF0Zm9ybSBvYmplY3QgYW5kIFBVU0ggaXQgaW50byB5b3VyIHBsYXRmb3JtcyBhcnJheSBhcyBhIHF1ZXVlLlxyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGF0Zm9ybTtcclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIldvcmQiLCJQbGF0Zm9ybSIsIlNUQVJUX1giLCJCQVNFX1kiLCJIRUlHSFQiLCJXSURUSCIsIkNPVU5UIiwiY29uc3RydWN0b3IiLCJ3b3JkIiwicG9zaXRpb24iLCJ4IiwieSIsImRyYXciLCJjdHgiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/platform.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n  static START_X = 260;\n  static START_Y = 550;\n  constructor() {\n    this.position = {\n      x: Player.START_X,\n      y: Player.START_Y\n    };\n    this.width = 50;\n    this.height = 50;\n  }\n  draw(ctx) {\n    ctx.fillStyle = \"#00FF5B\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNULE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCLE9BQU9DLE9BQU8sR0FBRyxHQUFHO0VBQ3BCQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBRztNQUNaQyxDQUFDLEVBQUVMLE1BQU0sQ0FBQ0MsT0FBTztNQUNqQkssQ0FBQyxFQUFFTixNQUFNLENBQUNFO0lBQ2QsQ0FBQztJQUNELElBQUksQ0FBQ0ssS0FBSyxHQUFHLEVBQUU7SUFDZixJQUFJLENBQUNDLE1BQU0sR0FBRyxFQUFFO0VBQ3BCO0VBRUFDLElBQUlBLENBQUNDLEdBQUcsRUFBRTtJQUNOQSxHQUFHLENBQUNDLFNBQVMsR0FBRyxTQUFTO0lBQ3pCRCxHQUFHLENBQUNFLFFBQVEsQ0FBQyxJQUFJLENBQUNSLFFBQVEsQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0QsUUFBUSxDQUFDRSxDQUFDLEVBQUUsSUFBSSxDQUFDQyxLQUFLLEVBQUUsSUFBSSxDQUFDQyxNQUFNLENBQUM7RUFDM0U7QUFDSjtBQUlBLCtEQUFlUixNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVHlwZXJKdW1wLy4vc3JjL3NjcmlwdHMvcGxheWVyLmpzPzY0NzEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUGxheWVyIHtcclxuICAgIHN0YXRpYyBTVEFSVF9YID0gMjYwO1xyXG4gICAgc3RhdGljIFNUQVJUX1kgPSA1NTA7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0ge1xyXG4gICAgICAgICAgICB4OiBQbGF5ZXIuU1RBUlRfWCxcclxuICAgICAgICAgICAgeTogUGxheWVyLlNUQVJUX1lcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IDUwXHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSA1MFxyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY3R4KSB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzAwRkY1QlwiXHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodClcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGF5ZXI7Il0sIm5hbWVzIjpbIlBsYXllciIsIlNUQVJUX1giLCJTVEFSVF9ZIiwiY29uc3RydWN0b3IiLCJwb3NpdGlvbiIsIngiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJkcmF3IiwiY3R4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/word.js":
/*!*****************************!*\
  !*** ./src/scripts/word.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n\nclass Word {\n  constructor(string, position) {\n    // how do I attach the most recent word to the most recent platform?\n    // maybe export every object's draw function to gameplay and then have gameplay feed word.draw the position of the last platform?\n\n    // this.position = {\n    //     x: somePlatform.position.x,\n    //     y: somePlatform.position.y\n    // }\n\n    this.string = string;\n    this.position = {\n      x: position.x,\n      y: position.y\n    };\n    // console.log(this.position)\n  }\n\n  //wordbank has ~100 words for now.  WHAT AN EYESORE\n  // this shouldn't be inside word class because we can't dynamically manipulate it then? gotta make a new randomized array in a diff class/ethod so that you can shift() it.\n\n  // wordBank = ['peck', 'push', 'coin', 'grim', 'soup', 'clap', 'nail', 'nuts', 'fine', 'walk', 'skelp', 'clock', 'sizes', 'elder', 'thief', 'thine', 'pious', 'dizzy', 'dazed', 'cloud', 'vital', 'these', 'excel', 'dodge', 'cease', 'being', 'pasty', 'abyss', 'hinder', 'alone', 'rewire', 'dragon', 'screwy', 'willed', 'basted', 'seeker', 'wagers', 'rabies', 'knight', 'larynx', 'winery', 'foiled', 'tartar', 'inmate', 'hornet', 'higher', 'deluge', 'zenith', 'hollow', 'mantis', 'tinted', 'infuse', 'planner', 'trussed', 'protium', 'pursuit', 'cogency', 'affable', 'thunder', 'clapped', 'subsale', 'cayenne', 'sifting', 'reorder', 'commend', 'minimum', 'bascule', 'inflict', 'overplan', 'function', 'fathered', 'flimflam', 'veracity', 'tutorial', 'frumpily', 'injuring', 'airliner', 'mistress', 'humoring', 'dressage', 'gemstone', 'gigaflop', 'scorning', 'rocklike', 'defender', 'vocalizes', 'whittling', 'nightmare', 'colosseum', 'confessed', 'debutante', 'insidious', 'micropore', 'omelettes', 'recumbent', 'moderates', 'weaponize', 'gyroscopic', 'dishearten', 'authorized', 'unfaithful', 'unbottling', 'crystalline']\n\n  //thoughts - it would be weird if the first word right off the bat was a 10-letter word. Might try to find a way to separate the word banks and only have words up to 6 letters for the first 10 platforms, then concat the rest into remainingWords\n\n  // remainingWords = wordBank.sort(() => Math.random() - 0.5);\n\n  // currentWord = remainingWords.shift();\n  // when Word.draw gets called, it'll might be something like 'new Word(currentWord)'\n\n  //\n  //on a bad key press, reset the index back to 0\n  //reset index is a WORD function, which has to get called by a \"handleBADkeypress\"\n  //\n\n  //instead of filling text with full string, draw each letter one at a time.\n  // for each letter's position, \n\n  //every word instance will start with this.index = 0\n  //give word class some type of function like \"handleCorrectKeyPress()\"\n  // - gonna take this.index ++\n\n  // THEN TELL PLATFORM IN ITS LOGIC TO ALSO handleCorrectKeyPress()\n  // - on a good key press, tell this.word.handleCorrectKeyPress()\n\n  // utilize a for (i)loop and do \n  // ctx.fillText (this.letters[i], this.position.x + \n  //*platform width/3 +)\n  // if i is less than this.index\n  draw(ctx) {\n    // debugger\n    ctx.font = '32px Cursive';\n    ctx.fillStyle = '#BF0436';\n    // console.log(this.position)\n    ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n\n    // this will be used when highlighting input\n    // ctx.fillStyle = 'blue'\n    // ctx.fillText(this.string.slice(0, 3), this.position.x, this.position.y, Platform.WIDTH)\n\n    // ctx.font = '32px Cursive';\n    // ctx.fillStyle = '#DC35F2';\n    // ctx.fillText('start', 600, 340)//this pos would be same as plat\n    // fillText(text, x, y, maxWidth)//this maxWidth would be platwidth\n  }\n\n  // in the for loop that iterates over the words you want on the screen and draws them... if index === 0, send it do a different draw function(?) that'll highlight with red. other words that you don't want them to type will be written in green or something\n  // then when you're checking key inputs to see if the user has pressed the correct letters, add each letter to a lettersPressed array,\n}\n\n// eventListener for key input. this most definitely goes in Gameplay or even index?\n// document.addEventListener('keydown', (event) => {\n//   const keyPressed = event.key;\n\n//   if (keyPressed === currentWord[0]) {\n//     currentWord = currentWord.slice(1);\n//   } // need some else logic here to maybe highlight red if keypress is wrong\n// });\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Word);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy93b3JkLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWtDO0FBRWxDLE1BQU1DLElBQUksQ0FBQztFQUNQQyxXQUFXQSxDQUFDQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTtJQUMxQjtJQUNBOztJQUVBO0lBQ0E7SUFDQTtJQUNBOztJQUVBLElBQUksQ0FBQ0QsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsUUFBUSxHQUFHO01BQ1pDLENBQUMsRUFBRUQsUUFBUSxDQUFDQyxDQUFDO01BQ2JDLENBQUMsRUFBRUYsUUFBUSxDQUFDRTtJQUNoQixDQUFDO0lBQ0Q7RUFDSjs7RUFFQTtFQUNBOztFQUVBOztFQUVBOztFQUVBOztFQUVBO0VBQ0E7O0VBRUo7RUFDQTtFQUNBO0VBQ0E7O0VBRUk7RUFDQTs7RUFFQTtFQUNBO0VBQ0E7O0VBRUE7RUFDQTs7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFDTjtJQUNBQSxHQUFHLENBQUNDLElBQUksR0FBRyxjQUFjO0lBQ3pCRCxHQUFHLENBQUNFLFNBQVMsR0FBRyxTQUFTO0lBQ3pCO0lBQ0FGLEdBQUcsQ0FBQ0csUUFBUSxDQUFDLElBQUksQ0FBQ1IsTUFBTSxFQUFFLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxDQUFDLEdBQUdMLHVEQUFjLEdBQUMsR0FBRyxFQUFFLElBQUksQ0FBQ0ksUUFBUSxDQUFDRSxDQUFDLEdBQUdOLHdEQUFlLEVBQUVBLHVEQUFjLENBQUM7O0lBRWxIO0lBQ0E7SUFDQTs7SUFHQTtJQUNBO0lBQ0E7SUFDQTtFQUNKOztFQUVBO0VBQ0E7QUFJSjs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWVDLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvc2NyaXB0cy93b3JkLmpzPzg3MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBsYXRmb3JtIGZyb20gXCIuL3BsYXRmb3JtXCI7XHJcblxyXG5jbGFzcyBXb3JkIHtcclxuICAgIGNvbnN0cnVjdG9yKHN0cmluZywgcG9zaXRpb24pIHtcclxuICAgICAgICAvLyBob3cgZG8gSSBhdHRhY2ggdGhlIG1vc3QgcmVjZW50IHdvcmQgdG8gdGhlIG1vc3QgcmVjZW50IHBsYXRmb3JtP1xyXG4gICAgICAgIC8vIG1heWJlIGV4cG9ydCBldmVyeSBvYmplY3QncyBkcmF3IGZ1bmN0aW9uIHRvIGdhbWVwbGF5IGFuZCB0aGVuIGhhdmUgZ2FtZXBsYXkgZmVlZCB3b3JkLmRyYXcgdGhlIHBvc2l0aW9uIG9mIHRoZSBsYXN0IHBsYXRmb3JtP1xyXG5cclxuICAgICAgICAvLyB0aGlzLnBvc2l0aW9uID0ge1xyXG4gICAgICAgIC8vICAgICB4OiBzb21lUGxhdGZvcm0ucG9zaXRpb24ueCxcclxuICAgICAgICAvLyAgICAgeTogc29tZVBsYXRmb3JtLnBvc2l0aW9uLnlcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIHRoaXMuc3RyaW5nID0gc3RyaW5nO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XHJcbiAgICAgICAgICAgIHg6IHBvc2l0aW9uLngsXHJcbiAgICAgICAgICAgIHk6IHBvc2l0aW9uLnlcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wb3NpdGlvbilcclxuICAgIH1cclxuXHJcbiAgICAvL3dvcmRiYW5rIGhhcyB+MTAwIHdvcmRzIGZvciBub3cuICBXSEFUIEFOIEVZRVNPUkVcclxuICAgIC8vIHRoaXMgc2hvdWxkbid0IGJlIGluc2lkZSB3b3JkIGNsYXNzIGJlY2F1c2Ugd2UgY2FuJ3QgZHluYW1pY2FsbHkgbWFuaXB1bGF0ZSBpdCB0aGVuPyBnb3R0YSBtYWtlIGEgbmV3IHJhbmRvbWl6ZWQgYXJyYXkgaW4gYSBkaWZmIGNsYXNzL2V0aG9kIHNvIHRoYXQgeW91IGNhbiBzaGlmdCgpIGl0LlxyXG5cclxuICAgIC8vIHdvcmRCYW5rID0gWydwZWNrJywgJ3B1c2gnLCAnY29pbicsICdncmltJywgJ3NvdXAnLCAnY2xhcCcsICduYWlsJywgJ251dHMnLCAnZmluZScsICd3YWxrJywgJ3NrZWxwJywgJ2Nsb2NrJywgJ3NpemVzJywgJ2VsZGVyJywgJ3RoaWVmJywgJ3RoaW5lJywgJ3Bpb3VzJywgJ2Rpenp5JywgJ2RhemVkJywgJ2Nsb3VkJywgJ3ZpdGFsJywgJ3RoZXNlJywgJ2V4Y2VsJywgJ2RvZGdlJywgJ2NlYXNlJywgJ2JlaW5nJywgJ3Bhc3R5JywgJ2FieXNzJywgJ2hpbmRlcicsICdhbG9uZScsICdyZXdpcmUnLCAnZHJhZ29uJywgJ3NjcmV3eScsICd3aWxsZWQnLCAnYmFzdGVkJywgJ3NlZWtlcicsICd3YWdlcnMnLCAncmFiaWVzJywgJ2tuaWdodCcsICdsYXJ5bngnLCAnd2luZXJ5JywgJ2ZvaWxlZCcsICd0YXJ0YXInLCAnaW5tYXRlJywgJ2hvcm5ldCcsICdoaWdoZXInLCAnZGVsdWdlJywgJ3plbml0aCcsICdob2xsb3cnLCAnbWFudGlzJywgJ3RpbnRlZCcsICdpbmZ1c2UnLCAncGxhbm5lcicsICd0cnVzc2VkJywgJ3Byb3RpdW0nLCAncHVyc3VpdCcsICdjb2dlbmN5JywgJ2FmZmFibGUnLCAndGh1bmRlcicsICdjbGFwcGVkJywgJ3N1YnNhbGUnLCAnY2F5ZW5uZScsICdzaWZ0aW5nJywgJ3Jlb3JkZXInLCAnY29tbWVuZCcsICdtaW5pbXVtJywgJ2Jhc2N1bGUnLCAnaW5mbGljdCcsICdvdmVycGxhbicsICdmdW5jdGlvbicsICdmYXRoZXJlZCcsICdmbGltZmxhbScsICd2ZXJhY2l0eScsICd0dXRvcmlhbCcsICdmcnVtcGlseScsICdpbmp1cmluZycsICdhaXJsaW5lcicsICdtaXN0cmVzcycsICdodW1vcmluZycsICdkcmVzc2FnZScsICdnZW1zdG9uZScsICdnaWdhZmxvcCcsICdzY29ybmluZycsICdyb2NrbGlrZScsICdkZWZlbmRlcicsICd2b2NhbGl6ZXMnLCAnd2hpdHRsaW5nJywgJ25pZ2h0bWFyZScsICdjb2xvc3NldW0nLCAnY29uZmVzc2VkJywgJ2RlYnV0YW50ZScsICdpbnNpZGlvdXMnLCAnbWljcm9wb3JlJywgJ29tZWxldHRlcycsICdyZWN1bWJlbnQnLCAnbW9kZXJhdGVzJywgJ3dlYXBvbml6ZScsICdneXJvc2NvcGljJywgJ2Rpc2hlYXJ0ZW4nLCAnYXV0aG9yaXplZCcsICd1bmZhaXRoZnVsJywgJ3VuYm90dGxpbmcnLCAnY3J5c3RhbGxpbmUnXVxyXG5cclxuICAgIC8vdGhvdWdodHMgLSBpdCB3b3VsZCBiZSB3ZWlyZCBpZiB0aGUgZmlyc3Qgd29yZCByaWdodCBvZmYgdGhlIGJhdCB3YXMgYSAxMC1sZXR0ZXIgd29yZC4gTWlnaHQgdHJ5IHRvIGZpbmQgYSB3YXkgdG8gc2VwYXJhdGUgdGhlIHdvcmQgYmFua3MgYW5kIG9ubHkgaGF2ZSB3b3JkcyB1cCB0byA2IGxldHRlcnMgZm9yIHRoZSBmaXJzdCAxMCBwbGF0Zm9ybXMsIHRoZW4gY29uY2F0IHRoZSByZXN0IGludG8gcmVtYWluaW5nV29yZHNcclxuXHJcbiAgICAvLyByZW1haW5pbmdXb3JkcyA9IHdvcmRCYW5rLnNvcnQoKCkgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSk7XHJcblxyXG4gICAgLy8gY3VycmVudFdvcmQgPSByZW1haW5pbmdXb3Jkcy5zaGlmdCgpO1xyXG4gICAgLy8gd2hlbiBXb3JkLmRyYXcgZ2V0cyBjYWxsZWQsIGl0J2xsIG1pZ2h0IGJlIHNvbWV0aGluZyBsaWtlICduZXcgV29yZChjdXJyZW50V29yZCknXHJcblxyXG4vL1xyXG4vL29uIGEgYmFkIGtleSBwcmVzcywgcmVzZXQgdGhlIGluZGV4IGJhY2sgdG8gMFxyXG4vL3Jlc2V0IGluZGV4IGlzIGEgV09SRCBmdW5jdGlvbiwgd2hpY2ggaGFzIHRvIGdldCBjYWxsZWQgYnkgYSBcImhhbmRsZUJBRGtleXByZXNzXCJcclxuLy9cclxuXHJcbiAgICAvL2luc3RlYWQgb2YgZmlsbGluZyB0ZXh0IHdpdGggZnVsbCBzdHJpbmcsIGRyYXcgZWFjaCBsZXR0ZXIgb25lIGF0IGEgdGltZS5cclxuICAgIC8vIGZvciBlYWNoIGxldHRlcidzIHBvc2l0aW9uLCBcclxuXHJcbiAgICAvL2V2ZXJ5IHdvcmQgaW5zdGFuY2Ugd2lsbCBzdGFydCB3aXRoIHRoaXMuaW5kZXggPSAwXHJcbiAgICAvL2dpdmUgd29yZCBjbGFzcyBzb21lIHR5cGUgb2YgZnVuY3Rpb24gbGlrZSBcImhhbmRsZUNvcnJlY3RLZXlQcmVzcygpXCJcclxuICAgIC8vIC0gZ29ubmEgdGFrZSB0aGlzLmluZGV4ICsrXHJcblxyXG4gICAgLy8gVEhFTiBURUxMIFBMQVRGT1JNIElOIElUUyBMT0dJQyBUTyBBTFNPIGhhbmRsZUNvcnJlY3RLZXlQcmVzcygpXHJcbiAgICAvLyAtIG9uIGEgZ29vZCBrZXkgcHJlc3MsIHRlbGwgdGhpcy53b3JkLmhhbmRsZUNvcnJlY3RLZXlQcmVzcygpXHJcblxyXG4gICAgLy8gdXRpbGl6ZSBhIGZvciAoaSlsb29wIGFuZCBkbyBcclxuICAgIC8vIGN0eC5maWxsVGV4dCAodGhpcy5sZXR0ZXJzW2ldLCB0aGlzLnBvc2l0aW9uLnggKyBcclxuICAgIC8vKnBsYXRmb3JtIHdpZHRoLzMgKylcclxuICAgIC8vIGlmIGkgaXMgbGVzcyB0aGFuIHRoaXMuaW5kZXhcclxuICAgIGRyYXcoY3R4KSB7XHJcbiAgICAgICAgLy8gZGVidWdnZXJcclxuICAgICAgICBjdHguZm9udCA9ICczMnB4IEN1cnNpdmUnO1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnI0JGMDQzNic7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wb3NpdGlvbilcclxuICAgICAgICBjdHguZmlsbFRleHQodGhpcy5zdHJpbmcsIHRoaXMucG9zaXRpb24ueCArIFBsYXRmb3JtLldJRFRILzMuMywgdGhpcy5wb3NpdGlvbi55ICsgUGxhdGZvcm0uSEVJR0hULCBQbGF0Zm9ybS5XSURUSClcclxuXHJcbiAgICAgICAgLy8gdGhpcyB3aWxsIGJlIHVzZWQgd2hlbiBoaWdobGlnaHRpbmcgaW5wdXRcclxuICAgICAgICAvLyBjdHguZmlsbFN0eWxlID0gJ2JsdWUnXHJcbiAgICAgICAgLy8gY3R4LmZpbGxUZXh0KHRoaXMuc3RyaW5nLnNsaWNlKDAsIDMpLCB0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgUGxhdGZvcm0uV0lEVEgpXHJcblxyXG5cclxuICAgICAgICAvLyBjdHguZm9udCA9ICczMnB4IEN1cnNpdmUnO1xyXG4gICAgICAgIC8vIGN0eC5maWxsU3R5bGUgPSAnI0RDMzVGMic7XHJcbiAgICAgICAgLy8gY3R4LmZpbGxUZXh0KCdzdGFydCcsIDYwMCwgMzQwKS8vdGhpcyBwb3Mgd291bGQgYmUgc2FtZSBhcyBwbGF0XHJcbiAgICAgICAgLy8gZmlsbFRleHQodGV4dCwgeCwgeSwgbWF4V2lkdGgpLy90aGlzIG1heFdpZHRoIHdvdWxkIGJlIHBsYXR3aWR0aFxyXG4gICAgfVxyXG5cclxuICAgIC8vIGluIHRoZSBmb3IgbG9vcCB0aGF0IGl0ZXJhdGVzIG92ZXIgdGhlIHdvcmRzIHlvdSB3YW50IG9uIHRoZSBzY3JlZW4gYW5kIGRyYXdzIHRoZW0uLi4gaWYgaW5kZXggPT09IDAsIHNlbmQgaXQgZG8gYSBkaWZmZXJlbnQgZHJhdyBmdW5jdGlvbig/KSB0aGF0J2xsIGhpZ2hsaWdodCB3aXRoIHJlZC4gb3RoZXIgd29yZHMgdGhhdCB5b3UgZG9uJ3Qgd2FudCB0aGVtIHRvIHR5cGUgd2lsbCBiZSB3cml0dGVuIGluIGdyZWVuIG9yIHNvbWV0aGluZ1xyXG4gICAgLy8gdGhlbiB3aGVuIHlvdSdyZSBjaGVja2luZyBrZXkgaW5wdXRzIHRvIHNlZSBpZiB0aGUgdXNlciBoYXMgcHJlc3NlZCB0aGUgY29ycmVjdCBsZXR0ZXJzLCBhZGQgZWFjaCBsZXR0ZXIgdG8gYSBsZXR0ZXJzUHJlc3NlZCBhcnJheSxcclxuXHJcblxyXG5cclxufVxyXG5cclxuXHJcbi8vIGV2ZW50TGlzdGVuZXIgZm9yIGtleSBpbnB1dC4gdGhpcyBtb3N0IGRlZmluaXRlbHkgZ29lcyBpbiBHYW1lcGxheSBvciBldmVuIGluZGV4P1xyXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XHJcbi8vICAgY29uc3Qga2V5UHJlc3NlZCA9IGV2ZW50LmtleTtcclxuXHJcbi8vICAgaWYgKGtleVByZXNzZWQgPT09IGN1cnJlbnRXb3JkWzBdKSB7XHJcbi8vICAgICBjdXJyZW50V29yZCA9IGN1cnJlbnRXb3JkLnNsaWNlKDEpO1xyXG4vLyAgIH0gLy8gbmVlZCBzb21lIGVsc2UgbG9naWMgaGVyZSB0byBtYXliZSBoaWdobGlnaHQgcmVkIGlmIGtleXByZXNzIGlzIHdyb25nXHJcbi8vIH0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgV29yZDsiXSwibmFtZXMiOlsiUGxhdGZvcm0iLCJXb3JkIiwiY29uc3RydWN0b3IiLCJzdHJpbmciLCJwb3NpdGlvbiIsIngiLCJ5IiwiZHJhdyIsImN0eCIsImZvbnQiLCJmaWxsU3R5bGUiLCJmaWxsVGV4dCIsIldJRFRIIiwiSEVJR0hUIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/word.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;