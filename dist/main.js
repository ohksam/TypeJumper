/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/gameplay */ \"./src/scripts/gameplay.js\");\n// this is your entry file - this is what Webpack will read\n\n// import Player from \"./scripts/player\";\n// import Platform from \"./scripts/platform\";\n// import Word from \"./scripts/word\";\n// ^for testing purposes rn. get rid of those once you have things properly imported and set in Game/Gameplay\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1000; // optimize this for 13-inch macbook pro when the\n  canvas.height = 650; // time comes\n\n  const gameplay = new _scripts_gameplay__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx).animate();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDO0FBQ1E7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFFBQVEsQ0FBQztFQUNoRCxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQztFQUVuQ0gsTUFBTSxDQUFDSSxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUU7RUFDdEJKLE1BQU0sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFFOztFQUV0QixNQUFNQyxRQUFRLEdBQUcsSUFBSVQseURBQVEsQ0FBQ0ssR0FBRyxDQUFDLENBQUNLLE9BQU8sQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1R5cGVySnVtcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaXMgaXMgeW91ciBlbnRyeSBmaWxlIC0gdGhpcyBpcyB3aGF0IFdlYnBhY2sgd2lsbCByZWFkXHJcblxyXG4vLyBpbXBvcnQgUGxheWVyIGZyb20gXCIuL3NjcmlwdHMvcGxheWVyXCI7XHJcbi8vIGltcG9ydCBQbGF0Zm9ybSBmcm9tIFwiLi9zY3JpcHRzL3BsYXRmb3JtXCI7XHJcbi8vIGltcG9ydCBXb3JkIGZyb20gXCIuL3NjcmlwdHMvd29yZFwiO1xyXG4vLyBeZm9yIHRlc3RpbmcgcHVycG9zZXMgcm4uIGdldCByaWQgb2YgdGhvc2Ugb25jZSB5b3UgaGF2ZSB0aGluZ3MgcHJvcGVybHkgaW1wb3J0ZWQgYW5kIHNldCBpbiBHYW1lL0dhbWVwbGF5XHJcblxyXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWVcIjtcclxuaW1wb3J0IEdhbWVwbGF5IGZyb20gXCIuL3NjcmlwdHMvZ2FtZXBsYXlcIjtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKVxyXG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJylcclxuXHJcbiAgICBjYW52YXMud2lkdGggPSAxMDAwOyAgLy8gb3B0aW1pemUgdGhpcyBmb3IgMTMtaW5jaCBtYWNib29rIHBybyB3aGVuIHRoZVxyXG4gICAgY2FudmFzLmhlaWdodCA9IDY1MDsgIC8vIHRpbWUgY29tZXNcclxuXHJcbiAgICBjb25zdCBnYW1lcGxheSA9IG5ldyBHYW1lcGxheShjdHgpLmFuaW1hdGUoKTtcclxufSlcclxuIl0sIm5hbWVzIjpbIkdhbWUiLCJHYW1lcGxheSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhcyIsImdldEVsZW1lbnRCeUlkIiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiaGVpZ2h0IiwiZ2FtZXBsYXkiLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\n\n\n\n// after you chop off the first word element from your platforms array, .push that into a \"completedWords\" array so that you can keep track of how many words were typed (also this'll help you make sure that your code is working properly)\n// SRS for words that are not perfectly typed, send them back into your wordbank\n\nclass Game {\n  static TEMPWORDBANK = ['start', 'nextword'];\n  static NUMPLATFORMS = 2;\n  static DEFAULTPOS = {\n    x: 69,\n    y: 69\n  };\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.platforms = [new Platform({x:280, y:550}), new Platform({x:550, y:280})];\n    this.words = []; //got rid of null and start word for testing\n    this.platforms = this.generatePlatforms(); //we'll see. this might not be exactly how you want to write this.\n    console.log(this.platforms);\n    this.player = [new _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()];\n  }\n  currentWord() {\n    return this.platforms[0].word.string;\n  }\n  generatePlatforms() {\n    //i'm gonna need a helper function here to return\n    const xPositions = [{\n      x: 200,\n      y: 220\n    }, {\n      x: 600,\n      y: 220\n    }];\n    let myPlatforms = [];\n    console.log(Game.TEMPWORDBANK);\n\n    // this logic below isn't working at all. maybe try separating it.\n    while (myPlatforms.length < 2) {\n      Game.TEMPWORDBANK.forEach(word => {\n        myPlatforms.push(new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](word, Game.DEFAULTPOS)); // *******\n      });\n    }\n    // return myPlatforms;\n\n    // debugger\n    for (let i = 0; i < Game.NUMPLATFORMS; i++) {\n      let randomSpot = xPositions[Math.floor(Math.random() * 2)];\n      if (i === 0) {\n        myPlatforms[i].position = {\n          x: 150,\n          y: 600\n        };\n        myPlatforms[i].word.position = {\n          x: 150,\n          y: 600\n        };\n      } else {\n        myPlatforms[i].position = randomSpot;\n        myPlatforms[i].word.position = randomSpot;\n      }\n    }\n    // debugger\n\n    // console.log(myPlatforms);\n    return myPlatforms;\n  }\n\n  // currentWord = this.words.slice(1)\n\n  allObjects() {\n    return this.platforms.concat(this.words, this.player);\n  }\n  draw(ctx) {\n    // debugger\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = \"#81D5FF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    this.allObjects().forEach(object => {\n      object.draw(ctx);\n    });\n  }\n\n  // for scrolling later - idk if I can dynamically scroll if I'm generating platforms from an array though....\n  // allObjects = platforms.concat(players).concat(words)\n  // allObjects.forEach(object => object.position.y += 5)\n\n  // Question for Kyle: when I clearRect and re-draw during the animation loop, won't the platforms/words get re-drawn at their initialized position instead of updated position?\n  // - if I don't want my platforms to reset, I should shift them out of my platforms array after I draw them and instead of calling .draw from within a forEach loop, I should just call .draw on the platforms.shift().\n\n  // this should probably all go in 1 game loop function / animate function\n  // generatePlatforms() {\n  //     for (let i = 0; i < platformCount; i++) {\n  //         // let platformX = js equivalent of array.sample from two possible X positions\n  //         let platformY = platforms[1].position.y - 300;\n  //         this.platforms.push(new Platform({x: platformX, y: platformY}))\n  //     }\n  // }\n\n  removeLowestPlatform() {\n    this.platforms.shift();\n  }\n  drawCurrentWord() {\n    //logic to locate the next platform and then draw word a set distance under it. unless I decide to do that above\n  }\n}\n\n// animate() {\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n//   drawPlatforms();\n//   drawCurrentWord();\n//     addNewPlatform();\n// }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/gameplay.js":
/*!*********************************!*\
  !*** ./src/scripts/gameplay.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n// think of what we need to inherit here\n\n\n// THIS SHOULD JUST DETECT KEYBINDS AND START THE ANIMATION LOOP\n\nclass Gameplay {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n    this.currentWord = this.game.currentWord(); // or this.game.platforms[0].word.string?\n    this.bindKeyHandlers();\n  }\n\n  // static scrollSpeed = 0.5\n\n  animate() {\n    // \n    // this.drawBackground(ctx); // this should draw the canvas\n    // this.moveObjects();       // this should update all objects position by the scrollSpeed\n    // debugger\n    this.game.draw(this.ctx); // and this should re-draw all objects after having been scrolled\n    // debugger\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  bindKeyHandlers() {\n    let rightChar = false;\n    document.addEventListener('keydown', e => {\n      const keyPressed = e.key;\n      // let currentWord = this.game.currentWord(); //THIS IS THE ISSUE RN\n      // let nextLetter = currentWord[0];\n\n      // console.log(e.key)\n\n      if (keyPressed === this.currentWord[0]) {\n        console.log('success');\n        this.currentWord = this.currentWord.slice(1);\n        // nextLetter = currentWord[0];\n        //some logic to change the index value in your letter painting\n        rightChar = true;\n      } else {\n        console.log('sadge');\n      }\n    });\n  }\n  // if (currentWord.length === 0) {\n  //     player.position = {\n  //         x: (platforms[1].position.x + platform.width) / 2,\n  //         y: platforms[1].position.y + platform.height\n  //     } \n  //         // change this to make sure player is on top of, not inside, platform\n  //     currentWord = remainingWords.shift();\n  // }\n}\n\n// start() {\n//     this.\n// }\n\n//regarding scrolling... \n// if player.position.y <= 60% canvas height, give all objects extra velocity to scroll them down to ~20? we'll see.\n\n// none of this is needed atm because I'm just teleporting the character to the next plaform, for now\n\n// //\n// // ***REMEMBER THAT THIS IS ALL PLAGIARIZED AT THE MOMENT. MAKE IT YOUR OWN***\n// //\n// animate() { //the animation loop (also contains player movement)\n//     requestAnimationFrame(animate)\n//     ctx.clearRect(0, 0, canvas.width, canvas.height)\n//     player.update()\n//     platforms.forEach(platform => {\n//         platform.draw()\n//     })\n\n//     if (keys.right.pressed && player.position.x < 400) { // added <400 for screen bounds\n//         player.velocity.x = 5\n//     } else if (keys.left.pressed && player.position.x > 100) {\n//         player.velocity.x = -5 \n//     } else {\n//         player.velocity.x = 0\n\n//         if (keys.right.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x -= 5\n//             })\n//             // for your project, put in a background.forEach(river => { river.position.y -= 2}) or something like that for your parallax effect (might not be fully necessary though, tbh)\n//         } else if (keys.left.pressed) {\n//             platforms.forEach(platform => {\n//                 platform.position.x += 5\n//             })\n//         }\n//     }\n\n//     // PLATFORM COLLISION DETECTION\n//     platforms.forEach(platform => {\n//         if (player.position.y + player.height <= platform.position.y && player.position.y + player.height + player.velocity.y >= platform.position.y && player.position.x + player.width >= platform.position.x && player.position.x <= platform.position.x + platform.width) {\n//             player.velocity.y = 0\n//         }\n//     })\n// }\n\n// animate() //this is calling the loop ^\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gameplay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lcGxheS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUFBO0FBQzBCOztBQUcxQjs7QUFFQSxNQUFNQyxRQUFRLENBQUM7RUFDWEMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFO0lBQ2IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJSiw2Q0FBSSxDQUFDRyxHQUFHLENBQUM7SUFFekIsSUFBSSxDQUFDRSxXQUFXLEdBQUcsSUFBSSxDQUFDRCxJQUFJLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1QyxJQUFJLENBQUNDLGVBQWUsQ0FBQyxDQUFDO0VBQzFCOztFQUVBOztFQUVBQyxPQUFPQSxDQUFBLEVBQUc7SUFBSTtJQUNWO0lBQ0E7SUFDQTtJQUNBLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDTCxHQUFHLENBQUMsQ0FBQyxDQUFJO0lBQzdCO0lBQ0FNLHFCQUFxQixDQUFDLElBQUksQ0FBQ0YsT0FBTyxDQUFDRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDbEQ7RUFFQUosZUFBZUEsQ0FBQSxFQUFHO0lBQ2QsSUFBSUssU0FBUyxHQUFHLEtBQUs7SUFDckJDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsU0FBUyxFQUFHQyxDQUFDLElBQUs7TUFDeEMsTUFBTUMsVUFBVSxHQUFHRCxDQUFDLENBQUNFLEdBQUc7TUFDeEI7TUFDQTs7TUFFQTs7TUFFQSxJQUFJRCxVQUFVLEtBQUssSUFBSSxDQUFDVixXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDcENZLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FBQztRQUN0QixJQUFJLENBQUNiLFdBQVcsR0FBRyxJQUFJLENBQUNBLFdBQVcsQ0FBQ2MsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM1QztRQUNBO1FBQ0FSLFNBQVMsR0FBRyxJQUFJO01BQ2hCLENBQUMsTUFBTTtRQUNITSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxPQUFPLENBQUM7TUFDNUI7SUFDSixDQUFDLENBQUM7RUFDTjtFQUNKO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUFHQTs7QUFFSTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFlQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTs7QUFJSiwrREFBZWpCLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvc2NyaXB0cy9nYW1lcGxheS5qcz83MGI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaW5rIG9mIHdoYXQgd2UgbmVlZCB0byBpbmhlcml0IGhlcmVcclxuaW1wb3J0IEdhbWUgZnJvbSBcIi4vZ2FtZVwiO1xyXG5cclxuXHJcbi8vIFRISVMgU0hPVUxEIEpVU1QgREVURUNUIEtFWUJJTkRTIEFORCBTVEFSVCBUSEUgQU5JTUFUSU9OIExPT1BcclxuXHJcbmNsYXNzIEdhbWVwbGF5IHtcclxuICAgIGNvbnN0cnVjdG9yKGN0eCkge1xyXG4gICAgICAgIHRoaXMuY3R4ID0gY3R4O1xyXG4gICAgICAgIHRoaXMuZ2FtZSA9IG5ldyBHYW1lKGN0eCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5jdXJyZW50V29yZCA9IHRoaXMuZ2FtZS5jdXJyZW50V29yZCgpOyAvLyBvciB0aGlzLmdhbWUucGxhdGZvcm1zWzBdLndvcmQuc3RyaW5nP1xyXG4gICAgICAgIHRoaXMuYmluZEtleUhhbmRsZXJzKClcclxuICAgIH1cclxuXHJcbiAgICAvLyBzdGF0aWMgc2Nyb2xsU3BlZWQgPSAwLjVcclxuXHJcbiAgICBhbmltYXRlKCkgeyAgIC8vIFxyXG4gICAgICAgIC8vIHRoaXMuZHJhd0JhY2tncm91bmQoY3R4KTsgLy8gdGhpcyBzaG91bGQgZHJhdyB0aGUgY2FudmFzXHJcbiAgICAgICAgLy8gdGhpcy5tb3ZlT2JqZWN0cygpOyAgICAgICAvLyB0aGlzIHNob3VsZCB1cGRhdGUgYWxsIG9iamVjdHMgcG9zaXRpb24gYnkgdGhlIHNjcm9sbFNwZWVkXHJcbiAgICAgICAgLy8gZGVidWdnZXJcclxuICAgICAgICB0aGlzLmdhbWUuZHJhdyh0aGlzLmN0eCk7ICAgIC8vIGFuZCB0aGlzIHNob3VsZCByZS1kcmF3IGFsbCBvYmplY3RzIGFmdGVyIGhhdmluZyBiZWVuIHNjcm9sbGVkXHJcbiAgICAgICAgLy8gZGVidWdnZXJcclxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIGJpbmRLZXlIYW5kbGVycygpIHtcclxuICAgICAgICBsZXQgcmlnaHRDaGFyID0gZmFsc2U7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGtleVByZXNzZWQgPSBlLmtleTtcclxuICAgICAgICAgICAgLy8gbGV0IGN1cnJlbnRXb3JkID0gdGhpcy5nYW1lLmN1cnJlbnRXb3JkKCk7IC8vVEhJUyBJUyBUSEUgSVNTVUUgUk5cclxuICAgICAgICAgICAgLy8gbGV0IG5leHRMZXR0ZXIgPSBjdXJyZW50V29yZFswXTtcclxuXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUua2V5KVxyXG5cclxuICAgICAgICAgICAgaWYgKGtleVByZXNzZWQgPT09IHRoaXMuY3VycmVudFdvcmRbMF0pIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzJylcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFdvcmQgPSB0aGlzLmN1cnJlbnRXb3JkLnNsaWNlKDEpO1xyXG4gICAgICAgICAgICAgICAgLy8gbmV4dExldHRlciA9IGN1cnJlbnRXb3JkWzBdO1xyXG4gICAgICAgICAgICAgICAgLy9zb21lIGxvZ2ljIHRvIGNoYW5nZSB0aGUgaW5kZXggdmFsdWUgaW4geW91ciBsZXR0ZXIgcGFpbnRpbmdcclxuICAgICAgICAgICAgICAgIHJpZ2h0Q2hhciA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzYWRnZScpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4vLyBpZiAoY3VycmVudFdvcmQubGVuZ3RoID09PSAwKSB7XHJcbi8vICAgICBwbGF5ZXIucG9zaXRpb24gPSB7XHJcbi8vICAgICAgICAgeDogKHBsYXRmb3Jtc1sxXS5wb3NpdGlvbi54ICsgcGxhdGZvcm0ud2lkdGgpIC8gMixcclxuLy8gICAgICAgICB5OiBwbGF0Zm9ybXNbMV0ucG9zaXRpb24ueSArIHBsYXRmb3JtLmhlaWdodFxyXG4vLyAgICAgfSBcclxuLy8gICAgICAgICAvLyBjaGFuZ2UgdGhpcyB0byBtYWtlIHN1cmUgcGxheWVyIGlzIG9uIHRvcCBvZiwgbm90IGluc2lkZSwgcGxhdGZvcm1cclxuLy8gICAgIGN1cnJlbnRXb3JkID0gcmVtYWluaW5nV29yZHMuc2hpZnQoKTtcclxuLy8gfVxyXG5cclxuXHJcbn1cclxuXHJcbiAgICAvLyBzdGFydCgpIHtcclxuICAgIC8vICAgICB0aGlzLlxyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vcmVnYXJkaW5nIHNjcm9sbGluZy4uLiBcclxuICAgIC8vIGlmIHBsYXllci5wb3NpdGlvbi55IDw9IDYwJSBjYW52YXMgaGVpZ2h0LCBnaXZlIGFsbCBvYmplY3RzIGV4dHJhIHZlbG9jaXR5IHRvIHNjcm9sbCB0aGVtIGRvd24gdG8gfjIwPyB3ZSdsbCBzZWUuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgIC8vIG5vbmUgb2YgdGhpcyBpcyBuZWVkZWQgYXRtIGJlY2F1c2UgSSdtIGp1c3QgdGVsZXBvcnRpbmcgdGhlIGNoYXJhY3RlciB0byB0aGUgbmV4dCBwbGFmb3JtLCBmb3Igbm93XHJcblxyXG4gICAgLy8gLy9cclxuICAgIC8vIC8vICoqKlJFTUVNQkVSIFRIQVQgVEhJUyBJUyBBTEwgUExBR0lBUklaRUQgQVQgVEhFIE1PTUVOVC4gTUFLRSBJVCBZT1VSIE9XTioqKlxyXG4gICAgLy8gLy9cclxuICAgIC8vIGFuaW1hdGUoKSB7IC8vdGhlIGFuaW1hdGlvbiBsb29wIChhbHNvIGNvbnRhaW5zIHBsYXllciBtb3ZlbWVudClcclxuICAgIC8vICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSlcclxuICAgIC8vICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodClcclxuICAgIC8vICAgICBwbGF5ZXIudXBkYXRlKClcclxuICAgIC8vICAgICBwbGF0Zm9ybXMuZm9yRWFjaChwbGF0Zm9ybSA9PiB7XHJcbiAgICAvLyAgICAgICAgIHBsYXRmb3JtLmRyYXcoKVxyXG4gICAgLy8gICAgIH0pXHJcbiAgICBcclxuICAgIC8vICAgICBpZiAoa2V5cy5yaWdodC5wcmVzc2VkICYmIHBsYXllci5wb3NpdGlvbi54IDwgNDAwKSB7IC8vIGFkZGVkIDw0MDAgZm9yIHNjcmVlbiBib3VuZHNcclxuICAgIC8vICAgICAgICAgcGxheWVyLnZlbG9jaXR5LnggPSA1XHJcbiAgICAvLyAgICAgfSBlbHNlIGlmIChrZXlzLmxlZnQucHJlc3NlZCAmJiBwbGF5ZXIucG9zaXRpb24ueCA+IDEwMCkge1xyXG4gICAgLy8gICAgICAgICBwbGF5ZXIudmVsb2NpdHkueCA9IC01IFxyXG4gICAgLy8gICAgIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgICAgIHBsYXllci52ZWxvY2l0eS54ID0gMFxyXG4gICAgXHJcbiAgICAvLyAgICAgICAgIGlmIChrZXlzLnJpZ2h0LnByZXNzZWQpIHtcclxuICAgIC8vICAgICAgICAgICAgIHBsYXRmb3Jtcy5mb3JFYWNoKHBsYXRmb3JtID0+IHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBwbGF0Zm9ybS5wb3NpdGlvbi54IC09IDVcclxuICAgIC8vICAgICAgICAgICAgIH0pXHJcbiAgICAvLyAgICAgICAgICAgICAvLyBmb3IgeW91ciBwcm9qZWN0LCBwdXQgaW4gYSBiYWNrZ3JvdW5kLmZvckVhY2gocml2ZXIgPT4geyByaXZlci5wb3NpdGlvbi55IC09IDJ9KSBvciBzb21ldGhpbmcgbGlrZSB0aGF0IGZvciB5b3VyIHBhcmFsbGF4IGVmZmVjdCAobWlnaHQgbm90IGJlIGZ1bGx5IG5lY2Vzc2FyeSB0aG91Z2gsIHRiaClcclxuICAgIC8vICAgICAgICAgfSBlbHNlIGlmIChrZXlzLmxlZnQucHJlc3NlZCkge1xyXG4gICAgLy8gICAgICAgICAgICAgcGxhdGZvcm1zLmZvckVhY2gocGxhdGZvcm0gPT4ge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIHBsYXRmb3JtLnBvc2l0aW9uLnggKz0gNVxyXG4gICAgLy8gICAgICAgICAgICAgfSlcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgICAgICBcclxuICAgIC8vICAgICAvLyBQTEFURk9STSBDT0xMSVNJT04gREVURUNUSU9OXHJcbiAgICAvLyAgICAgcGxhdGZvcm1zLmZvckVhY2gocGxhdGZvcm0gPT4ge1xyXG4gICAgLy8gICAgICAgICBpZiAocGxheWVyLnBvc2l0aW9uLnkgKyBwbGF5ZXIuaGVpZ2h0IDw9IHBsYXRmb3JtLnBvc2l0aW9uLnkgJiYgcGxheWVyLnBvc2l0aW9uLnkgKyBwbGF5ZXIuaGVpZ2h0ICsgcGxheWVyLnZlbG9jaXR5LnkgPj0gcGxhdGZvcm0ucG9zaXRpb24ueSAmJiBwbGF5ZXIucG9zaXRpb24ueCArIHBsYXllci53aWR0aCA+PSBwbGF0Zm9ybS5wb3NpdGlvbi54ICYmIHBsYXllci5wb3NpdGlvbi54IDw9IHBsYXRmb3JtLnBvc2l0aW9uLnggKyBwbGF0Zm9ybS53aWR0aCkge1xyXG4gICAgLy8gICAgICAgICAgICAgcGxheWVyLnZlbG9jaXR5LnkgPSAwXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9KVxyXG4gICAgLy8gfVxyXG5cclxuXHJcbiAgICAvLyBhbmltYXRlKCkgLy90aGlzIGlzIGNhbGxpbmcgdGhlIGxvb3AgXlxyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBHYW1lcGxheTsiXSwibmFtZXMiOlsiR2FtZSIsIkdhbWVwbGF5IiwiY29uc3RydWN0b3IiLCJjdHgiLCJnYW1lIiwiY3VycmVudFdvcmQiLCJiaW5kS2V5SGFuZGxlcnMiLCJhbmltYXRlIiwiZHJhdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImJpbmQiLCJyaWdodENoYXIiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwia2V5UHJlc3NlZCIsImtleSIsImNvbnNvbGUiLCJsb2ciLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/gameplay.js\n");

/***/ }),

/***/ "./src/scripts/platform.js":
/*!*********************************!*\
  !*** ./src/scripts/platform.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _word__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word */ \"./src/scripts/word.js\");\n\nclass Platform {\n  static START_X = 200;\n  static BASE_Y = 30;\n  static HEIGHT = 20;\n  static WIDTH = 250;\n  static COUNT = 3; //this should probably be in Game.\n\n  constructor(word, position) {\n    this.word = new _word__WEBPACK_IMPORTED_MODULE_0__[\"default\"](word, position);\n    this.position = {\n      x: position.x,\n      y: position.y\n    };\n    // this.width = 250\n    // this.height = 20\n  }\n\n  //setter\n  // set position(newPosition) {\n  //     this._position = {\n  //         x: newPosition.x,\n  //         y: newPosition.y\n  //     };\n  //     this.word.position = {\n  //         x: newPosition.x,\n  //         y: newPosition.y\n  //     }\n  // }\n\n  // platforms = []; // confused here because when gameplay draws these, it'll have 2 hard-coded platforms to start with\n\n  draw(ctx) {\n    // do i want to pass platform.draw a position as parameter?\n    // debugger\n    ctx.fillStyle = \"#DEFF55\";\n    ctx.fillRect(this.position.x, this.position.y, Platform.WIDTH, Platform.HEIGHT);\n    // throw in word drawing logic here too\n    this.word.draw(ctx);\n  }\n}\n\n// at the very beginning, start with 2 hard-coded platforms in your platforms array, and then run the function addNewPlat() which is going to take the latest platform in your platforms array and then set a new x and y coordinate based off it's position. then it's going to make that new platform object and PUSH it into your platforms array as a queue.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Platform);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUF5QjtBQUV6QixNQUFNQyxRQUFRLENBQUM7RUFDWCxPQUFPQyxPQUFPLEdBQUcsR0FBRztFQUNwQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxNQUFNLEdBQUcsRUFBRTtFQUNsQixPQUFPQyxLQUFLLEdBQUcsR0FBRztFQUNsQixPQUFPQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7O0VBRWxCQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUVDLFFBQVEsRUFBRTtJQUN4QixJQUFJLENBQUNELElBQUksR0FBRyxJQUFJUiw2Q0FBSSxDQUFDUSxJQUFJLEVBQUVDLFFBQVEsQ0FBQztJQUNwQyxJQUFJLENBQUNBLFFBQVEsR0FBRztNQUNaQyxDQUFDLEVBQUVELFFBQVEsQ0FBQ0MsQ0FBQztNQUNiQyxDQUFDLEVBQUVGLFFBQVEsQ0FBQ0U7SUFDaEIsQ0FBQztJQUNEO0lBQ0E7RUFDSjs7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVBOztFQUVBQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFBRTtJQUNSO0lBQ0FBLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLFNBQVM7SUFDekJELEdBQUcsQ0FBQ0UsUUFBUSxDQUFDLElBQUksQ0FBQ04sUUFBUSxDQUFDQyxDQUFDLEVBQUUsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFBRVYsUUFBUSxDQUFDSSxLQUFLLEVBQUVKLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0lBQy9FO0lBQ0EsSUFBSSxDQUFDSSxJQUFJLENBQUNJLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0VBQ3ZCO0FBRUo7O0FBR0E7O0FBSUEsK0RBQWVaLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvc2NyaXB0cy9wbGF0Zm9ybS5qcz84NmRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXb3JkIGZyb20gJy4vd29yZCdcclxuXHJcbmNsYXNzIFBsYXRmb3JtIHtcclxuICAgIHN0YXRpYyBTVEFSVF9YID0gMjAwO1xyXG4gICAgc3RhdGljIEJBU0VfWSA9IDMwO1xyXG4gICAgc3RhdGljIEhFSUdIVCA9IDIwO1xyXG4gICAgc3RhdGljIFdJRFRIID0gMjUwO1xyXG4gICAgc3RhdGljIENPVU5UID0gMzsgLy90aGlzIHNob3VsZCBwcm9iYWJseSBiZSBpbiBHYW1lLlxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHdvcmQsIHBvc2l0aW9uKSB7XHJcbiAgICAgICAgdGhpcy53b3JkID0gbmV3IFdvcmQod29yZCwgcG9zaXRpb24pO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XHJcbiAgICAgICAgICAgIHg6IHBvc2l0aW9uLngsXHJcbiAgICAgICAgICAgIHk6IHBvc2l0aW9uLnlcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gdGhpcy53aWR0aCA9IDI1MFxyXG4gICAgICAgIC8vIHRoaXMuaGVpZ2h0ID0gMjBcclxuICAgIH1cclxuXHJcbiAgICAvL3NldHRlclxyXG4gICAgLy8gc2V0IHBvc2l0aW9uKG5ld1Bvc2l0aW9uKSB7XHJcbiAgICAvLyAgICAgdGhpcy5fcG9zaXRpb24gPSB7XHJcbiAgICAvLyAgICAgICAgIHg6IG5ld1Bvc2l0aW9uLngsXHJcbiAgICAvLyAgICAgICAgIHk6IG5ld1Bvc2l0aW9uLnlcclxuICAgIC8vICAgICB9O1xyXG4gICAgLy8gICAgIHRoaXMud29yZC5wb3NpdGlvbiA9IHtcclxuICAgIC8vICAgICAgICAgeDogbmV3UG9zaXRpb24ueCxcclxuICAgIC8vICAgICAgICAgeTogbmV3UG9zaXRpb24ueVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBwbGF0Zm9ybXMgPSBbXTsgLy8gY29uZnVzZWQgaGVyZSBiZWNhdXNlIHdoZW4gZ2FtZXBsYXkgZHJhd3MgdGhlc2UsIGl0J2xsIGhhdmUgMiBoYXJkLWNvZGVkIHBsYXRmb3JtcyB0byBzdGFydCB3aXRoXHJcblxyXG4gICAgZHJhdyhjdHgpIHsgLy8gZG8gaSB3YW50IHRvIHBhc3MgcGxhdGZvcm0uZHJhdyBhIHBvc2l0aW9uIGFzIHBhcmFtZXRlcj9cclxuICAgICAgICAvLyBkZWJ1Z2dlclxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBcIiNERUZGNTVcIlxyXG4gICAgICAgIGN0eC5maWxsUmVjdCh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgUGxhdGZvcm0uV0lEVEgsIFBsYXRmb3JtLkhFSUdIVClcclxuICAgICAgICAvLyB0aHJvdyBpbiB3b3JkIGRyYXdpbmcgbG9naWMgaGVyZSB0b29cclxuICAgICAgICB0aGlzLndvcmQuZHJhdyhjdHgpXHJcbiAgICB9IFxyXG5cclxufVxyXG5cclxuXHJcbi8vIGF0IHRoZSB2ZXJ5IGJlZ2lubmluZywgc3RhcnQgd2l0aCAyIGhhcmQtY29kZWQgcGxhdGZvcm1zIGluIHlvdXIgcGxhdGZvcm1zIGFycmF5LCBhbmQgdGhlbiBydW4gdGhlIGZ1bmN0aW9uIGFkZE5ld1BsYXQoKSB3aGljaCBpcyBnb2luZyB0byB0YWtlIHRoZSBsYXRlc3QgcGxhdGZvcm0gaW4geW91ciBwbGF0Zm9ybXMgYXJyYXkgYW5kIHRoZW4gc2V0IGEgbmV3IHggYW5kIHkgY29vcmRpbmF0ZSBiYXNlZCBvZmYgaXQncyBwb3NpdGlvbi4gdGhlbiBpdCdzIGdvaW5nIHRvIG1ha2UgdGhhdCBuZXcgcGxhdGZvcm0gb2JqZWN0IGFuZCBQVVNIIGl0IGludG8geW91ciBwbGF0Zm9ybXMgYXJyYXkgYXMgYSBxdWV1ZS5cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGxhdGZvcm07XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJXb3JkIiwiUGxhdGZvcm0iLCJTVEFSVF9YIiwiQkFTRV9ZIiwiSEVJR0hUIiwiV0lEVEgiLCJDT1VOVCIsImNvbnN0cnVjdG9yIiwid29yZCIsInBvc2l0aW9uIiwieCIsInkiLCJkcmF3IiwiY3R4IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/platform.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n  constructor() {\n    this.position = {\n      x: 260,\n      y: 550\n    };\n    this.width = 50;\n    this.height = 50;\n  }\n  draw(ctx) {\n    ctx.fillStyle = \"#00FF5B\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNUQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBRztNQUNaQyxDQUFDLEVBQUUsR0FBRztNQUNOQyxDQUFDLEVBQUU7SUFDUCxDQUFDO0lBQ0QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsRUFBRTtJQUNmLElBQUksQ0FBQ0MsTUFBTSxHQUFHLEVBQUU7RUFDcEI7RUFFQUMsSUFBSUEsQ0FBQ0MsR0FBRyxFQUFFO0lBQ05BLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLFNBQVM7SUFDekJELEdBQUcsQ0FBQ0UsUUFBUSxDQUFDLElBQUksQ0FBQ1IsUUFBUSxDQUFDQyxDQUFDLEVBQUUsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFBRSxJQUFJLENBQUNDLEtBQUssRUFBRSxJQUFJLENBQUNDLE1BQU0sQ0FBQztFQUMzRTtBQUNKO0FBSUEsK0RBQWVOLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanM/NjQ3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQbGF5ZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgeDogMjYwLFxyXG4gICAgICAgICAgICB5OiA1NTBcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IDUwXHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSA1MFxyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY3R4KSB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzAwRkY1QlwiXHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodClcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGF5ZXI7Il0sIm5hbWVzIjpbIlBsYXllciIsImNvbnN0cnVjdG9yIiwicG9zaXRpb24iLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwiZHJhdyIsImN0eCIsImZpbGxTdHlsZSIsImZpbGxSZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/word.js":
/*!*****************************!*\
  !*** ./src/scripts/word.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform */ \"./src/scripts/platform.js\");\n\nclass Word {\n  constructor(string, position) {\n    // how do I attach the most recent word to the most recent platform?\n    // maybe export every object's draw function to gameplay and then have gameplay feed word.draw the position of the last platform?\n\n    // this.position = {\n    //     x: somePlatform.position.x,\n    //     y: somePlatform.position.y\n    // }\n\n    this.string = string;\n    this.position = {\n      x: position.x,\n      y: position.y\n    };\n    // console.log(this.position)\n  }\n\n  //wordbank has ~100 words for now.  WHAT AN EYESORE\n  // this shouldn't be inside word class because we can't dynamically manipulate it then? gotta make a new randomized array in a diff class/ethod so that you can shift() it.\n\n  wordBank = ['peck', 'push', 'coin', 'grim', 'soup', 'clap', 'nail', 'nuts', 'fine', 'walk', 'skelp', 'clock', 'sizes', 'elder', 'thief', 'thine', 'pious', 'dizzy', 'dazed', 'cloud', 'vital', 'these', 'excel', 'dodge', 'cease', 'being', 'pasty', 'abyss', 'hinder', 'alone', 'rewire', 'dragon', 'screwy', 'willed', 'basted', 'seeker', 'wagers', 'rabies', 'knight', 'larynx', 'winery', 'foiled', 'tartar', 'inmate', 'hornet', 'higher', 'deluge', 'zenith', 'hollow', 'mantis', 'tinted', 'infuse', 'planner', 'trussed', 'protium', 'pursuit', 'cogency', 'affable', 'thunder', 'clapped', 'subsale', 'cayenne', 'sifting', 'reorder', 'commend', 'minimum', 'bascule', 'inflict', 'overplan', 'function', 'fathered', 'flimflam', 'veracity', 'tutorial', 'frumpily', 'injuring', 'airliner', 'mistress', 'humoring', 'dressage', 'gemstone', 'gigaflop', 'scorning', 'rocklike', 'defender', 'vocalizes', 'whittling', 'nightmare', 'colosseum', 'confessed', 'debutante', 'insidious', 'micropore', 'omelettes', 'recumbent', 'moderates', 'weaponize', 'gyroscopic', 'dishearten', 'authorized', 'unfaithful', 'unbottling', 'crystalline'];\n\n  //thoughts - it would be weird if the first word right off the bat was a 10-letter word. Might try to find a way to separate the word banks and only have words up to 6 letters for the first 10 platforms, then concat the rest into remainingWords\n\n  // remainingWords = wordBank.sort(() => Math.random() - 0.5);\n\n  // currentWord = remainingWords.shift();\n  // when Word.draw gets called, it'll might be something like 'new Word(currentWord)'\n\n  draw(ctx) {\n    ctx.font = '32px Cursive';\n    ctx.fillStyle = '#BF0436';\n    // console.log(this.position)\n    ctx.fillText(this.string, this.position.x + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH / 3.3, this.position.y + _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].HEIGHT, _platform__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WIDTH);\n\n    // this will be used when highlighting input\n    // ctx.fillStyle = 'blue'\n    // ctx.fillText(this.string.slice(0, 3), this.position.x, this.position.y, Platform.WIDTH)\n\n    // ctx.font = '32px Cursive';\n    // ctx.fillStyle = '#DC35F2';\n    // ctx.fillText('start', 600, 340)//this pos would be same as plat\n    // fillText(text, x, y, maxWidth)//this maxWidth would be platwidth\n  }\n\n  // in the for loop that iterates over the words you want on the screen and draws them... if index === 0, send it do a different draw function(?) that'll highlight with red. other words that you don't want them to type will be written in green or something\n  // then when you're checking key inputs to see if the user has pressed the correct letters, add each letter to a lettersPressed array,\n}\n\n// eventListener for key input. this most definitely goes in Gameplay or even index?\n// document.addEventListener('keydown', (event) => {\n//   const keyPressed = event.key;\n\n//   if (keyPressed === currentWord[0]) {\n//     currentWord = currentWord.slice(1);\n//   } // need some else logic here to maybe highlight red if keypress is wrong\n// });\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Word);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlckp1bXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;